{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?a022","webpack:///./src/components/ThreeDField.vue?d35a","webpack:///./src/components/Slice.vue?aafc","webpack:///./src/App.vue?e885","webpack:///./src/components/Form.vue?908f","webpack:///src/components/Form.vue","webpack:///./src/components/Form.vue?ffef","webpack:///./src/components/Form.vue","webpack:///./src/components/ThreeDField.vue?5657","webpack:///src/components/ThreeDField.vue","webpack:///./src/components/ThreeDField.vue?7f7c","webpack:///./src/components/ThreeDField.vue","webpack:///./src/components/Slice.vue?c6e0","webpack:///src/components/Slice.vue","webpack:///./src/components/Slice.vue?62f9","webpack:///./src/components/Slice.vue","webpack:///./src/components/VerticalSlice.vue?7077","webpack:///src/components/VerticalSlice.vue","webpack:///./src/components/VerticalSlice.vue?fea9","webpack:///./src/components/VerticalSlice.vue","webpack:///src/App.vue","webpack:///./src/App.vue?4c4f","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/VerticalSlice.vue?c82f","webpack:///./src/components/Form.vue?d2dd"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticStyle","staticClass","_v","on","$event","formVisible","closeFormDialog","sliceDialogVisible","closeSliceDialog","conn","casterCfg","curvesDialogVisible","closeCurvesDialog","staticRenderFns","ref","form","rules","selectCaster","model","callback","$$v","$set","expression","_l","item","label","directives","rawName","calculationStarted","changeInitialTemp","changeV","md","changeNarrowSurface","changeWideSurface","zone_name","narrow_side_volume","_e","speed2Water","step","bottom","top","setCalculateEnv","envSet","startCalculate","stopCalculate","showDetailSlice","showDetailCurves","component","switchVisibility","visible","_s","sliceIndex","HorizontalSolidThickness","HorizontalLiquidThickness","VerticalSolidThickness","VerticalLiquidThickness","max","showSliceDetail","pointTemp","toFixed","casterMarks","coolingMarks","solidJoin","liquidJoin","index2","showVerticalSlice2AtIndex","marks","maxZLength","showEdgeAtYIndex","yIndex","option","showVerticalSlice1AtIndex","Vue","use","ElementUI","render","h","App","$mount"],"mappings":"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","file":"static/js/app.3a2de8f5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/admin/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeDField.vue?vue&type=style&index=0&id=0825d1c4&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slice.vue?vue&type=style&index=0&id=1799912c&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('el-container',[_c('el-header',{staticStyle:{\"padding\":\"0\",\"z-index\":\"100\",\"text-align\":\"left\"}},[_c('div',{staticClass:\"header_p\"},[_vm._v(\"计算温度场\")]),_c('el-button',{attrs:{\"type\":\"success\",\"circle\":\"\"},on:{\"click\":function($event){_vm.formVisible = true}}},[_c('i',{staticClass:\"el-icon-plus\"})])],1),_c('el-container',[_c('el-main',[_c('ThreeDField')],1)],1)],1),_c('el-dialog',{attrs:{\"visible\":_vm.formVisible,\"center\":\"\",\"top\":\"5vh\"},on:{\"update:visible\":function($event){_vm.formVisible=$event}}},[_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"normal\"},on:{\"click\":_vm.closeFormDialog}},[_vm._v(\"关闭\")]),_c('Form')],1),_c('el-dialog',{attrs:{\"destroy-on-close\":true,\"visible\":_vm.sliceDialogVisible,\"width\":\"100%\",\"center\":\"\",\"top\":\"0vh\",\"fullscreen\":true},on:{\"update:visible\":function($event){_vm.sliceDialogVisible=$event}}},[_c('div',{staticClass:\"dialog_title\"},[_c('span',[_vm._v(\"温度场横切片分布详情\")]),_c('br'),_c('br'),_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":_vm.closeSliceDialog}},[_vm._v(\"关闭页面\")])],1),_c('SliceShow',{attrs:{\"conn\":_vm.conn,\"config\":_vm.casterCfg}})],1),_c('el-dialog',{attrs:{\"destroy-on-close\":true,\"visible\":_vm.curvesDialogVisible,\"width\":\"100%\",\"center\":\"\",\"top\":\"0vh\",\"fullscreen\":true},on:{\"update:visible\":function($event){_vm.curvesDialogVisible=$event}}},[_c('div',{staticClass:\"dialog_title\"},[_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":_vm.closeCurvesDialog}},[_vm._v(\"关闭页面\")])],1),_c('Curves',{attrs:{\"conn\":_vm.conn,\"config\":_vm.casterCfg}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-form',{ref:\"ruleForm\",staticStyle:{\"padding\":\"20px 0\"},attrs:{\"model\":_vm.form,\"rules\":_vm.rules,\"label-width\":\"auto\"}},[_c('div',{staticStyle:{\"height\":\"100%\"}},[_c('div',{staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":\"选择铸机\",\"prop\":\"machineValue\"}},[_c('el-select',{attrs:{\"size\":\"small\",\"placeholder\":\"请选择\"},on:{\"change\":_vm.selectCaster},model:{value:(_vm.form.machineValue),callback:function ($$v) {_vm.$set(_vm.form, \"machineValue\", $$v)},expression:\"form.machineValue\"}},_vm._l((_vm.form.machineOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_c('div',{staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":\"选择钢种\",\"prop\":\"steelValue\"}},[_c('el-select',{attrs:{\"size\":\"small\",\"placeholder\":\"请选择\"},model:{value:(_vm.form.steelValue),callback:function ($$v) {_vm.$set(_vm.form, \"steelValue\", $$v)},expression:\"form.steelValue\"}},_vm._l((_vm.form.steelOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_c('div',{staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":\"浇注温度\",\"prop\":\"startTemperature\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"max\":1600,\"min\":200},model:{value:(_vm.form.startTemperature),callback:function ($$v) {_vm.$set(_vm.form, \"startTemperature\", $$v)},expression:\"form.startTemperature\"}}),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.calculationStarted),expression:\"calculationStarted\"}],staticClass:\"item-button\",attrs:{\"disabled\":!_vm.calculationStarted,\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-right\"},on:{\"click\":_vm.changeInitialTemp}})],1)],1),_c('div',{staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":\"弯月面高度\",\"prop\":\"levelHeight\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"max\":200,\"min\":0},model:{value:(_vm.form.levelHeight),callback:function ($$v) {_vm.$set(_vm.form, \"levelHeight\", $$v)},expression:\"form.levelHeight\"}})],1)],1),_c('div',{staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":\"计算方式\",\"prop\":\"calculateMethodValue\"}},[_c('el-select',{attrs:{\"size\":\"small\",\"placeholder\":\"请选择\"},model:{value:(_vm.form.calculateMethodValue),callback:function ($$v) {_vm.$set(_vm.form, \"calculateMethodValue\", $$v)},expression:\"form.calculateMethodValue\"}},_vm._l((_vm.form.calculateMethods),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_c('div',{staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":\"是否存在电磁制动/搅拌\"}},[_c('el-checkbox',{model:{value:(_vm.form.is_electromag_brake),callback:function ($$v) {_vm.$set(_vm.form, \"is_electromag_brake\", $$v)},expression:\"form.is_electromag_brake\"}},[_vm._v(\"电磁制动\")]),_c('el-checkbox',{model:{value:(_vm.form.is_electromag_stir),callback:function ($$v) {_vm.$set(_vm.form, \"is_electromag_stir\", $$v)},expression:\"form.is_electromag_stir\"}},[_vm._v(\"电磁搅拌\")])],1)],1),_c('div',{staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":\"拉速\",\"prop\":\"dragSpeed\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":0.1,\"min\":1.5,\"max\":150},model:{value:(_vm.form.dragSpeed),callback:function ($$v) {_vm.$set(_vm.form, \"dragSpeed\", $$v)},expression:\"form.dragSpeed\"}}),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.calculationStarted),expression:\"calculationStarted\"}],staticClass:\"item-button\",attrs:{\"disabled\":!_vm.calculationStarted,\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-right\"},on:{\"click\":_vm.changeV}})],1)],1),_c('div',{staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":\"结晶器铜板窄面\"}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"prop\":\"narrowSurfaceIn\",\"label\":\"进水温度℃\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"min\":20,\"max\":100,\"placeholder\":\"进水温度\"},model:{value:(_vm.form.md.narrow_surface_in),callback:function ($$v) {_vm.$set(_vm.form.md, \"narrow_surface_in\", $$v)},expression:\"form.md.narrow_surface_in\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"prop\":\"narrowSurfaceOut\",\"label\":\"出水温度℃\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"min\":20,\"max\":100,\"placeholder\":\"出水温度\"},model:{value:(_vm.form.md.narrow_surface_out),callback:function ($$v) {_vm.$set(_vm.form.md, \"narrow_surface_out\", $$v)},expression:\"form.md.narrow_surface_out\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"prop\":\"narrowSurfaceVolume\",\"label\":\"水量L/min\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"min\":0,\"placeholder\":\"水量\"},model:{value:(_vm.form.md.narrow_surface_volume),callback:function ($$v) {_vm.$set(_vm.form.md, \"narrow_surface_volume\", $$v)},expression:\"form.md.narrow_surface_volume\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.calculationStarted),expression:\"calculationStarted\"}],staticClass:\"item-button\",attrs:{\"disabled\":!_vm.calculationStarted,\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-right\"},on:{\"click\":_vm.changeNarrowSurface}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"结晶器铜板宽面\"}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"prop\":\"wideSurfaceIn\",\"label\":\"进水温度℃\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"min\":20,\"max\":100,\"placeholder\":\"进水温度\"},model:{value:(_vm.form.md.wide_surface_in),callback:function ($$v) {_vm.$set(_vm.form.md, \"wide_surface_in\", $$v)},expression:\"form.md.wide_surface_in\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"prop\":\"wideSurfaceOut\",\"label\":\"出水温度℃\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"min\":0,\"max\":100,\"placeholder\":\"出水温度\"},model:{value:(_vm.form.md.wide_surface_out),callback:function ($$v) {_vm.$set(_vm.form.md, \"wide_surface_out\", $$v)},expression:\"form.md.wide_surface_out\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"prop\":\"wideSurfaceVolume\",\"label\":\"水量L/min\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"min\":0,\"placeholder\":\"水量\"},model:{value:(_vm.form.md.wide_surface_volume),callback:function ($$v) {_vm.$set(_vm.form.md, \"wide_surface_volume\", $$v)},expression:\"form.md.wide_surface_volume\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.calculationStarted),expression:\"calculationStarted\"}],staticClass:\"item-button\",attrs:{\"disabled\":!_vm.calculationStarted,\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-right\"},on:{\"click\":_vm.changeWideSurface}})],1)],1)],1),_vm._l((_vm.casterCfg.cooling_zone),function(item){return _c('div',{key:item.zone_name,staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":item.zone_name}},[_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"喷淋水温度\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"placeholder\":\"水温\"},model:{value:(item.spray_water_temperature),callback:function ($$v) {_vm.$set(item, \"spray_water_temperature\", $$v)},expression:\"item.spray_water_temperature\"}})],1)],1),_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"内弧中心水量\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"placeholder\":\"内弧中心水量\"},model:{value:(item.inner_arc_volume),callback:function ($$v) {_vm.$set(item, \"inner_arc_volume\", $$v)},expression:\"item.inner_arc_volume\"}})],1)],1),_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"幅切1水量\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"placeholder\":\"幅切1水量\"},model:{value:(item.fuqie_1_volume),callback:function ($$v) {_vm.$set(item, \"fuqie_1_volume\", $$v)},expression:\"item.fuqie_1_volume\"}})],1)],1),_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"幅切2水量\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"placeholder\":\"幅切2水量\"},model:{value:(item.fuqie_2_volume),callback:function ($$v) {_vm.$set(item, \"fuqie_2_volume\", $$v)},expression:\"item.fuqie_2_volume\"}})],1)],1),(item.narrow_side_volume !== 0)?_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"窄面水量\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":1,\"placeholder\":\"窄面水量\"},model:{value:(item.narrow_side_volume),callback:function ($$v) {_vm.$set(item, \"narrow_side_volume\", $$v)},expression:\"item.narrow_side_volume\"}})],1)],1):_vm._e()],1)],1)}),_c('div',{staticClass:\"group\"},[_c('el-form-item',{attrs:{\"label\":\"计算水表的拉速范围\"}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":_vm.form.speed2Water.step,\"min\":_vm.form.speed2Water.bottom,\"max\":3.00,\"placeholder\":\"上限\"},model:{value:(_vm.form.speed2Water.top),callback:function ($$v) {_vm.$set(_vm.form.speed2Water, \"top\", $$v)},expression:\"form.speed2Water.top\"}})],1),_c('el-col',{attrs:{\"span\":8}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":_vm.form.speed2Water.step,\"max\":_vm.form.speed2Water.top,\"placeholder\":\"下限\"},model:{value:(_vm.form.speed2Water.bottom),callback:function ($$v) {_vm.$set(_vm.form.speed2Water, \"bottom\", $$v)},expression:\"form.speed2Water.bottom\"}})],1),_c('el-col',{attrs:{\"span\":8}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"precision\":2,\"step\":0.1,\"min\":0.00,\"max\":1.00,\"placeholder\":\"增量\"},model:{value:(_vm.form.speed2Water.step),callback:function ($$v) {_vm.$set(_vm.form.speed2Water, \"step\", $$v)},expression:\"form.speed2Water.step\"}})],1)],1)],1),_c('div',{staticStyle:{\"height\":\"100px\"}}),_c('div',{attrs:{\"id\":\"operations\"}},[_c('el-button',{attrs:{\"round\":true,\"size\":\"small\",\"type\":\"primary\",\"disabled\":_vm.calculationStarted},on:{\"click\":function($event){return _vm.setCalculateEnv('ruleForm')}}},[_vm._v(\"设置计算环境 \")]),_c('el-button',{attrs:{\"round\":true,\"size\":\"small\",\"type\":\"success\",\"disabled\":!_vm.envSet || _vm.calculationStarted},on:{\"click\":_vm.startCalculate}},[_vm._v(\"开始计算 \")]),_c('el-button',{attrs:{\"round\":true,\"size\":\"small\",\"type\":\"danger\",\"disabled\":!_vm.calculationStarted},on:{\"click\":_vm.stopCalculate}},[_vm._v(\"停止计算 \")]),_c('el-button',{attrs:{\"round\":true,\"size\":\"small\",\"type\":\"warning\",\"disabled\":!_vm.calculationStarted},on:{\"click\":function($event){return _vm.showDetailSlice()}}},[_vm._v(\"查看切片温度详情 \")]),_c('el-button',{attrs:{\"round\":true,\"size\":\"small\",\"type\":\"warning\",\"disabled\":!_vm.calculationStarted},on:{\"click\":_vm.showDetailCurves}},[_vm._v(\"查看纵切面温度分布 \")])],1)],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <el-form :model=\"form\" :rules=\"rules\" label-width=\"auto\" ref=\"ruleForm\" style=\"padding: 20px 0;\">\r\n        <div style=\"height: 100%\">\r\n            <div class=\"group\">\r\n                <el-form-item label=\"选择铸机\" prop=\"machineValue\">\r\n                    <el-select size=\"small\" v-model=\"form.machineValue\" placeholder=\"请选择\" @change=\"selectCaster\">\r\n                        <el-option\r\n                                v-for=\"item in form.machineOptions\"\r\n                                :key=\"item.value\"\r\n                                :label=\"item.label\"\r\n                                :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n<!--                    <el-button class=\"item-button\" v-show=\"calculationStarted\" :disabled=\"!calculationStarted\"-->\r\n<!--                               size=\"mini\" type=\"primary\"-->\r\n<!--                               @click=\"changeMachine\">更换铸机-->\r\n<!--                    </el-button>-->\r\n                </el-form-item>\r\n            </div>\r\n\r\n            <div class=\"group\">\r\n                <el-form-item label=\"选择钢种\" prop=\"steelValue\">\r\n                    <el-select size=\"small\" v-model=\"form.steelValue\" placeholder=\"请选择\">\r\n                        <el-option\r\n                                v-for=\"item in form.steelOptions\"\r\n                                :key=\"item.value\"\r\n                                :label=\"item.label\"\r\n                                :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n<!--                    <el-button class=\"item-button\" v-show=\"calculationStarted\" :disabled=\"!calculationStarted\"-->\r\n<!--                               type=\"primary\" size=\"mini\"-->\r\n<!--                               @click=\"addSteelType\">添加钢种-->\r\n<!--                    </el-button>-->\r\n                </el-form-item>\r\n            </div>\r\n\r\n            <div class=\"group\">\r\n                <el-form-item label=\"浇注温度\" prop=\"startTemperature\">\r\n                    <el-input-number size=\"small\" v-model=\"form.startTemperature\" :precision=\"2\" :step=\"1\"\r\n                                     :max=\"1600\" :min=\"200\"></el-input-number>\r\n                    <el-button class=\"item-button\" v-show=\"calculationStarted\" :disabled=\"!calculationStarted\"\r\n                               size=\"mini\" type=\"primary\"\r\n                               icon=\"el-icon-right\"\r\n                               @click=\"changeInitialTemp\"></el-button>\r\n                </el-form-item>\r\n            </div>\r\n\r\n            <div class=\"group\">\r\n                <el-form-item label=\"弯月面高度\" prop=\"levelHeight\">\r\n                    <el-input-number size=\"small\" v-model=\"form.levelHeight\" :precision=\"2\" :step=\"1\"\r\n                                     :max=\"200\" :min=\"0\"></el-input-number>\r\n                </el-form-item>\r\n            </div>\r\n\r\n            <div class=\"group\">\r\n                <el-form-item label=\"计算方式\" prop=\"calculateMethodValue\">\r\n                    <el-select size=\"small\" v-model=\"form.calculateMethodValue\" placeholder=\"请选择\">\r\n                        <el-option\r\n                                v-for=\"item in form.calculateMethods\"\r\n                                :key=\"item.value\"\r\n                                :label=\"item.label\"\r\n                                :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n            </div>\r\n\r\n            <div class=\"group\">\r\n                <el-form-item label=\"是否存在电磁制动/搅拌\">\r\n                    <el-checkbox v-model=\"form.is_electromag_brake\">电磁制动</el-checkbox>\r\n                    <el-checkbox v-model=\"form.is_electromag_stir\">电磁搅拌</el-checkbox>\r\n                </el-form-item>\r\n            </div>\r\n\r\n            <div class=\"group\">\r\n                <el-form-item label=\"拉速\" prop=\"dragSpeed\">\r\n                    <el-input-number size=\"small\" v-model=\"form.dragSpeed\" :precision=\"2\" :step=\"0.1\" :min=\"1.5\"\r\n                                     :max=\"150\"></el-input-number>\r\n                    <el-button class=\"item-button\" v-show=\"calculationStarted\" :disabled=\"!calculationStarted\"\r\n                               size=\"mini\" type=\"primary\"\r\n                               icon=\"el-icon-right\"\r\n                               @click=\"changeV\"></el-button>\r\n                </el-form-item>\r\n            </div>\r\n\r\n            <div class=\"group\">\r\n                <el-form-item label=\"结晶器铜板窄面\">\r\n                    <el-col :span=\"12\">\r\n                        <el-form-item prop=\"narrowSurfaceIn\" label=\"进水温度℃\">\r\n                            <el-input-number size=\"small\" v-model=\"form.md.narrow_surface_in\" :precision=\"2\" :step=\"1\"\r\n                                             :min=\"20\" :max=\"100\"\r\n                                             placeholder=\"进水温度\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"12\">\r\n                        <el-form-item prop=\"narrowSurfaceOut\" label=\"出水温度℃\">\r\n                            <el-input-number size=\"small\" v-model=\"form.md.narrow_surface_out\" :precision=\"2\" :step=\"1\"\r\n                                             :min=\"20\" :max=\"100\"\r\n                                             placeholder=\"出水温度\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"12\">\r\n                        <el-form-item prop=\"narrowSurfaceVolume\" label=\"水量L/min\">\r\n                            <el-input-number size=\"small\" v-model=\"form.md.narrow_surface_volume\" :precision=\"2\"\r\n                                             :step=\"1\"\r\n                                             :min=\"0\"\r\n                                             placeholder=\"水量\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"12\">\r\n                        <el-button class=\"item-button\" v-show=\"calculationStarted\" :disabled=\"!calculationStarted\"\r\n                                   size=\"mini\" type=\"primary\"\r\n                                   icon=\"el-icon-right\"\r\n                                   @click=\"changeNarrowSurface\"></el-button>\r\n                    </el-col>\r\n                </el-form-item>\r\n                <el-form-item label=\"结晶器铜板宽面\">\r\n                    <el-col :span=\"12\">\r\n                        <el-form-item prop=\"wideSurfaceIn\" label=\"进水温度℃\">\r\n                            <el-input-number size=\"small\" v-model=\"form.md.wide_surface_in\" :precision=\"2\" :step=\"1\"\r\n                                             :min=\"20\" :max=\"100\"\r\n                                             placeholder=\"进水温度\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"12\">\r\n                        <el-form-item prop=\"wideSurfaceOut\" label=\"出水温度℃\">\r\n                            <el-input-number size=\"small\" v-model=\"form.md.wide_surface_out\" :precision=\"2\" :step=\"1\"\r\n                                             :min=\"0\" :max=\"100\"\r\n                                             placeholder=\"出水温度\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"12\">\r\n                        <el-form-item prop=\"wideSurfaceVolume\" label=\"水量L/min\">\r\n                            <el-input-number size=\"small\" v-model=\"form.md.wide_surface_volume\" :precision=\"2\" :step=\"1\"\r\n                                             :min=\"0\"\r\n                                             placeholder=\"水量\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"12\">\r\n                        <el-button class=\"item-button\" v-show=\"calculationStarted\" :disabled=\"!calculationStarted\"\r\n                                   size=\"mini\" type=\"primary\"\r\n                                   icon=\"el-icon-right\"\r\n                                   @click=\"changeWideSurface\"></el-button>\r\n                    </el-col>\r\n                </el-form-item>\r\n            </div>\r\n\r\n            <div class=\"group\" v-for=\"item in casterCfg.cooling_zone\" :key=\"item.zone_name\">\r\n                <el-form-item :label=\"item.zone_name\">\r\n                    <el-col :span=\"10\">\r\n                        <el-form-item label=\"喷淋水温度\">\r\n                            <el-input-number size=\"small\" :precision=\"2\" :step=\"1\"\r\n                                             v-model=\"item.spray_water_temperature\"\r\n                                             placeholder=\"水温\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"10\">\r\n                        <el-form-item label=\"内弧中心水量\">\r\n                            <el-input-number size=\"small\" :precision=\"2\" :step=\"1\" v-model=\"item.inner_arc_volume\"\r\n                                             placeholder=\"内弧中心水量\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"10\">\r\n                        <el-form-item label=\"幅切1水量\">\r\n                            <el-input-number size=\"small\" :precision=\"2\" :step=\"1\" v-model=\"item.fuqie_1_volume\"\r\n                                             placeholder=\"幅切1水量\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span=\"10\">\r\n                        <el-form-item label=\"幅切2水量\">\r\n                            <el-input-number size=\"small\" :precision=\"2\" :step=\"1\" v-model=\"item.fuqie_2_volume\"\r\n                                             placeholder=\"幅切2水量\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col v-if=\"item.narrow_side_volume !== 0\" :span=\"10\">\r\n                        <el-form-item label=\"窄面水量\">\r\n                            <el-input-number size=\"small\" :precision=\"2\" :step=\"1\" v-model=\"item.narrow_side_volume\"\r\n                                             placeholder=\"窄面水量\"></el-input-number>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                </el-form-item>\r\n            </div>\r\n            <!-- 暂时没有用到 -->\r\n            <div class=\"group\">\r\n                <el-form-item label=\"计算水表的拉速范围\">\r\n                    <el-col :span=\"8\">\r\n                        <el-input-number v-model=\"form.speed2Water.top\" size=\"small\" :precision=\"2\"\r\n                                         :step=\"form.speed2Water.step\"\r\n                                         :min=\"form.speed2Water.bottom\" :max=\"3.00\" placeholder=\"上限\"></el-input-number>\r\n                    </el-col>\r\n                    <el-col :span=\"8\">\r\n                        <el-input-number v-model=\"form.speed2Water.bottom\" size=\"small\" :precision=\"2\"\r\n                                         :step=\"form.speed2Water.step\"\r\n                                         :max=\"form.speed2Water.top\" placeholder=\"下限\"></el-input-number>\r\n                    </el-col>\r\n                    <el-col :span=\"8\">\r\n                        <el-input-number v-model=\"form.speed2Water.step\" size=\"small\" :precision=\"2\" :step=\"0.1\"\r\n                                         :min=\"0.00\"\r\n                                         :max=\"1.00\" placeholder=\"增量\"></el-input-number>\r\n                    </el-col>\r\n                </el-form-item>\r\n            </div>\r\n\r\n            <div style=\"height: 100px;\"></div>\r\n\r\n            <div id=\"operations\">\r\n                <el-button :round=\"true\" size=\"small\" type=\"primary\" :disabled=\"calculationStarted\"\r\n                           @click=\"setCalculateEnv('ruleForm')\">设置计算环境\r\n                </el-button>\r\n                <el-button :round=\"true\" size=\"small\" type=\"success\" @click=\"startCalculate\"\r\n                           :disabled=\"!envSet || calculationStarted\">开始计算\r\n                </el-button>\r\n                <el-button :round=\"true\" size=\"small\" type=\"danger\" @click=\"stopCalculate\"\r\n                           :disabled=\"!calculationStarted\">停止计算\r\n                </el-button>\r\n                <el-button :round=\"true\" size=\"small\" type=\"warning\" @click=\"showDetailSlice()\"\r\n                           :disabled=\"!calculationStarted\">查看切片温度详情\r\n                </el-button>\r\n                <el-button :round=\"true\" size=\"small\" type=\"warning\" @click=\"showDetailCurves\"\r\n                           :disabled=\"!calculationStarted\">查看纵切面温度分布\r\n                </el-button>\r\n<!--                <el-button :round=\"true\" size=\"small\" type=\"warning\" @click=\"startTail\" :disabled=\"!calculationStarted\">-->\r\n<!--                    拉尾坯-->\r\n<!--                </el-button>-->\r\n            </div>\r\n\r\n        </div>\r\n    </el-form>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Form\",\r\n        data() {\r\n            return {\r\n                connection: null,\r\n                envSet: false,\r\n                calculationStarted: false,\r\n                casterCfg: {},\r\n                form: {\r\n                    machineOptions: [{\r\n                        value: \"caster\",\r\n                        label: '铸机14-20-7'\r\n                    }],\r\n                    machineValue: undefined,\r\n                    steelOptions: [{\r\n                        value: 1,\r\n                        label: 'Q345B'\r\n                    }],\r\n                    steelValue: undefined,\r\n                    is_electromag_brake: false,\r\n                    is_electromag_stir: false,\r\n                    startTemperature: 1530.00,\r\n                    levelHeight: 100,\r\n                    md: {\r\n                        narrow_surface_in: 33.00,\r\n                        narrow_surface_out: 40.00,\r\n                        narrow_surface_volume: 500.00,\r\n                        wide_surface_in: 33.00,\r\n                        wide_surface_out: 40.00,\r\n                        wide_surface_volume: 3000.00,\r\n                    },\r\n                    dragSpeed: 1.50,\r\n                    calculateMethods: [{\r\n                        value: 1,\r\n                        label: '用温度计算'\r\n                    }, {\r\n                        value: 2,\r\n                        label: '用水量计算'\r\n                    }],\r\n                    calculateMethodValue: 1,\r\n                    speed2Water: {\r\n                        top: undefined,\r\n                        bottom: undefined,\r\n                        step: undefined,\r\n                    }\r\n                },\r\n                rules: {\r\n                    machineValue: [\r\n                        {required: true, message: '请选择铸机', trigger: 'change'},\r\n                    ],\r\n                    steelValue: [\r\n                        {required: true, message: '请选择钢种', trigger: 'change'},\r\n                    ],\r\n                    startTemperature: [\r\n                        {required: true, message: '请输入温度', trigger: 'blur'},\r\n                        {type: 'number', min: 0, max: 2000, message: '温度在 0 到 2000之间', trigger: 'blur'}\r\n                    ],\r\n                    levelHeight: [\r\n                        {required: true, message: '请输入弯月面高度', trigger: 'blur'},\r\n                    ],\r\n                    dragSpeed: [\r\n                        {required: true, message: '请输入速度', trigger: 'blur'},\r\n                        {type: 'number', min: 1.5, max: 150, message: '速度在 1.5 到 150之间', trigger: 'blur'}\r\n                    ],\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            selectCaster: function (caster) {\r\n                console.log(caster)\r\n                let message = {\r\n                    type: \"select_caster\",\r\n                    content: caster,\r\n                }\r\n                this.connection.send(JSON.stringify(message));\r\n            },\r\n            // todo\r\n            // changeMachine: function () {\r\n            //     console.log(this.form.machineValue)\r\n            // },\r\n            // addSteelType: function () {\r\n            //     console.log(this.form.steelValue)\r\n            // },\r\n            changeInitialTemp: function () {\r\n                let message = {\r\n                    type: \"change_initial_temp\",\r\n                    content: String(this.form.startTemperature),\r\n                }\r\n                this.connection.send(JSON.stringify(message));\r\n            },\r\n            changeNarrowSurface: function () {\r\n                let narrowSurface = {\r\n                    in: this.form.md.narrowSurfaceIn,\r\n                    out: this.form.md.narrowSurfaceOut,\r\n                    volume: this.form.md.narrowSurfaceVolume\r\n                }\r\n                let message = {\r\n                    type: \"change_narrow_surface\",\r\n                    content: JSON.stringify(narrowSurface)\r\n                }\r\n                this.connection.send(JSON.stringify(message));\r\n            },\r\n            changeWideSurface: function () {\r\n                let wideSurface = {\r\n                    in: this.form.md.wideSurfaceIn,\r\n                    out: this.form.md.wideSurfaceOut,\r\n                    volume: this.form.md.wideSurfaceVolume\r\n                }\r\n                let message = {\r\n                    type: \"change_wide_surface\",\r\n                    content: JSON.stringify(wideSurface)\r\n                }\r\n                this.connection.send(JSON.stringify(message));\r\n            },\r\n            changeV: function () {\r\n                let message = {\r\n                    type: \"change_v\",\r\n                    content: String(this.form.dragSpeed),\r\n                }\r\n                this.connection.send(JSON.stringify(message));\r\n            },\r\n            setCalculateEnv: function (formName) {\r\n                console.log(this.form)\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        let coolingWaterSections = []\r\n                        for (let i = 0; i < this.casterCfg.cooling_zone.length; i++) {\r\n                            coolingWaterSections.push(\r\n                                {\r\n                                    spray_water_temperature: this.casterCfg.cooling_zone[i].spray_water_temperature,\r\n                                    inner_arc_water_volume: this.casterCfg.cooling_zone[i].inner_arc_volume,\r\n                                    narrow_side_water_volume: this.casterCfg.cooling_zone[i].narrow_side_volume,\r\n                                }\r\n                            )\r\n                        }\r\n                        let env = {\r\n                            level_height: this.form.levelHeight,\r\n                            steel_value: this.form.steelValue,\r\n                            start_temperature: this.form.startTemperature,\r\n                            md: this.form.md,\r\n                            drag_speed: this.form.dragSpeed,\r\n                            coordinate: this.casterCfg.coordinate,\r\n                            secondary_cooling_water_cfg: coolingWaterSections,\r\n                            cooling_zone_cfg: this.casterCfg.cooling_zone\r\n                        }\r\n                        let message = {\r\n                            type: \"env\",\r\n                            content: JSON.stringify(env)\r\n                        }\r\n                        console.log(message)\r\n                        this.connection.send(JSON.stringify(message))\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            startCalculate: function () {\r\n                let message = {\r\n                    type: \"start\",\r\n                    content: \"start to calculate\"\r\n                }\r\n                this.connection.send(JSON.stringify(message));\r\n            },\r\n            stopCalculate: function () {\r\n                let message = {\r\n                    type: \"stop\",\r\n                    content: \"stop to calculate\"\r\n                }\r\n                this.connection.send(JSON.stringify(message));\r\n                console.log(\"stop to calculate\")\r\n            },\r\n            // startTail: function () {\r\n            //     let message = {\r\n            //         type: \"tail\",\r\n            //         content: \"start to tail\"\r\n            //     }\r\n            //     this.connection.send(JSON.stringify(message));\r\n            // },\r\n            showDetailSlice: function () {\r\n                let config = this.casterCfg\r\n                this.$root.$emit(\"show_detail_slice\", {show: true, config: config, conn: this.connection})\r\n            },\r\n            showDetailCurves: function () {\r\n                let config = this.casterCfg\r\n                this.$root.$emit(\"show_detail_curves\", {show: true, config: config, conn: this.connection})\r\n            },\r\n        },\r\n        created: function () {\r\n            let self = this\r\n            console.log(\"Starting connection to WebSocket Server\")\r\n            self.connection = new WebSocket(\"ws://localhost:9000/ws\")\r\n\r\n            self.connection.onmessage = function (event) {\r\n                let data = JSON.parse(event.data)\r\n                // console.log(data)\r\n                switch (data.type) {\r\n                    case \"caster_info\": {\r\n                        self.casterCfg = JSON.parse(data.content)\r\n                        self.$root.$emit(\"caster_info\", self.casterCfg)\r\n                        break\r\n                    }\r\n                    case \"env_set\": {\r\n                        self.envSet = true\r\n                        break\r\n                    }\r\n                    case \"initial_temp_set\": {\r\n                        console.log(data.content)\r\n                        break\r\n                    }\r\n                    case \"narrow_surface_temp_set\": {\r\n                        console.log(data.content)\r\n                        break\r\n                    }\r\n                    case \"wide_surface_temp_set\": {\r\n                        console.log(data.content)\r\n                        break\r\n                    }\r\n                    case \"v_set\": {\r\n                        console.log(data.content)\r\n                        break\r\n                    }\r\n                    case \"started\": {\r\n                        self.calculationStarted = true\r\n                        break\r\n                    }\r\n                    case \"data_push\": {\r\n                        let content = JSON.parse(data.content)\r\n                        // console.log(data)\r\n                        self.$root.$emit(\"new_field_data\", content)\r\n                        break\r\n                    }\r\n                    case \"stopped\": {\r\n                        self.calculationStarted = false\r\n                        break\r\n                    }\r\n                    case \"calculating\": {\r\n                        console.log(data.content)\r\n                        break\r\n                    }\r\n                    // case \"tail_start\": {\r\n                    //     console.log(data.content)\r\n                    //     break\r\n                    // }\r\n                    case \"slice_generated\": {\r\n                        let content = JSON.parse(data.content)\r\n                        self.$root.$emit(\"slice_generated\", content)\r\n                        break\r\n                    }\r\n                    case \"vertical_slice1_generated\": {\r\n                        let content = JSON.parse(data.content)\r\n                        self.$root.$emit(\"vertical_slice1_generated\", content)\r\n                        break\r\n                    }\r\n                    case \"vertical_slice2_generated\": {\r\n                        let content = JSON.parse(data.content)\r\n                        self.$root.$emit(\"vertical_slice2_generated\", content)\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.connection.onopen = function (event) {\r\n                console.log(event)\r\n                console.log(\"Successfully connected to the echo websocket server...\")\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-form {\r\n        height: calc(100vh - 160px);\r\n        max-height: calc(100vh - 160px);\r\n        overflow-y: auto;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .group {\r\n        padding-top: 15px;\r\n        border-bottom: 1px solid #ddd;\r\n    }\r\n\r\n    .item-button {\r\n        margin-left: 15px;\r\n    }\r\n\r\n    #operations {\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        height: 100px;\r\n        width: 100%;\r\n        box-shadow: rgba(0, 0, 0, 0.51) 0 5px 15px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        z-index: 100;\r\n        background: white;\r\n    }\r\n\r\n    .el-form-item {\r\n        padding: 0 15px;\r\n        text-align: left;\r\n    }\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=21bb4d9e&scoped=true&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Form.vue?vue&type=style&index=0&id=21bb4d9e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"21bb4d9e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"container\"}},[(_vm.casterLoaded)?_c('el-switch',{staticStyle:{\"position\":\"absolute\",\"left\":\"50%\",\"top\":\"10px\",\"z-index\":\"999\",\"transform\":\"translateX(-50%)\"},attrs:{\"active-color\":\"#13ce66\",\"inactive-color\":\"#ff4949\"},on:{\"change\":_vm.switchVisibility},model:{value:(_vm.visible),callback:function ($$v) {_vm.visible=$$v},expression:\"visible\"}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"container\">\r\n        <el-switch\r\n                v-if=\"casterLoaded\"\r\n                @change=\"switchVisibility\"\r\n                style=\"position: absolute; left: 50%; top: 10px; z-index: 999; transform: translateX(-50%)\"\r\n                v-model=\"visible\"\r\n                active-color=\"#13ce66\"\r\n                inactive-color=\"#ff4949\">\r\n        </el-switch>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import * as THREE from 'three'\r\n    import OrbitControls from 'three-orbitcontrols'\r\n    import {FontLoader} from 'three/examples/jsm/loaders/FontLoader';\r\n    import {TextGeometry} from 'three/examples/jsm/geometries/TextGeometry'\r\n    import fontJson from '../assets/fonts/helvetiker_bold.typeface.json'\r\n\r\n    export default {\r\n        name: \"ThreeDField\",\r\n        data() {\r\n            return {\r\n                casterLoaded: false,\r\n\r\n                scene: undefined,\r\n                camera: undefined,\r\n                renderer: undefined,\r\n                geometry: undefined,\r\n                material: undefined,\r\n                group: undefined,\r\n                positions: [],\r\n                colors: [],\r\n\r\n                container: undefined,\r\n                width: 0,\r\n                height: 0,\r\n\r\n                points: undefined,\r\n\r\n                rOut: undefined,\r\n                rIn: undefined,\r\n                // 铸机尺寸配置\r\n                zScale: 10,\r\n                xScale: 5,\r\n                yScale: 5,\r\n                originXLength: 0,\r\n                originYLength: 0,\r\n                originMd: 0,\r\n                xLength: 0,\r\n                yLength: 0,\r\n                md: 0, // 结晶器长度\r\n                levelHeight: 0,\r\n                centerStart: 0,\r\n                centerEnd: 0,\r\n                arcStart: 0,\r\n                arcEnd: 0,\r\n\r\n                coolerMaterial: undefined,\r\n                rollerMaterials: undefined,\r\n                visible: true,\r\n\r\n                originTemperature: 1601,\r\n\r\n                fullCount: 0, // 记录切片充满的次数，第一次特殊处理\r\n                // 三维字体配置\r\n                fontHeight: 2,\r\n                fontSize: 12,\r\n                curveSegments: 10,\r\n                bevelThickness: 0.1,\r\n                bevelSize: 0.3,\r\n                bevelSegments: 3,\r\n                bevelEnabled: true,\r\n                font: undefined,\r\n                textMatForCaster: undefined,\r\n                textMatForCooling: undefined,\r\n\r\n                // 标记\r\n                matForCaster: undefined,\r\n                matForCooling: undefined\r\n            }\r\n        },\r\n        methods: {\r\n            init: function () {\r\n                this.scene = new THREE.Scene()\r\n\r\n                this.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 10000)\r\n                this.camera.position.set(0, 0, 1550);\r\n\r\n                this.scene.add(new THREE.AmbientLight(0xffffff))\r\n\r\n                this.scene.background = new THREE.Color(0xffffff)\r\n\r\n                this.group = new THREE.Group()\r\n                this.group.position.set(-200, 300, 0)\r\n                this.scene.add(this.group)\r\n\r\n                this.heatmap = this.createPalette()\r\n\r\n                this.renderer = new THREE.WebGLRenderer()\r\n                this.renderer.setPixelRatio(window.devicePixelRatio)\r\n                this.renderer.setSize(this.width, this.height)\r\n                for (let canvas of this.heatmap.canvas) {\r\n                    this.container.appendChild(canvas)\r\n                }\r\n                this.container.appendChild(this.renderer.domElement)\r\n\r\n                let controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n                controls.addEventListener('change', this.render)\r\n\r\n                window.addEventListener('resize', this.onWindowResize, false)\r\n            },\r\n            onWindowResize: function () {\r\n                this.camera.aspect = this.width / this.height\r\n                this.camera.updateProjectionMatrix()\r\n\r\n                this.renderer.setSize(this.width, this.height)\r\n            },\r\n            animate: function () {\r\n                requestAnimationFrame(this.animate)\r\n                this.render()\r\n            },\r\n            render: function () {\r\n                this.renderer.render(this.scene, this.camera)\r\n            },\r\n            createPalette: function () {\r\n                //颜色条的颜色分布\r\n                let data1 = this.createPaletteHelper({\r\n                    1.0: \"#388E3C\",\r\n                    0.5: \"#536DFE\",\r\n                    0.0: \"#212121\",\r\n                }, [\r\n                    {char: \"800\", x: 70, y: 790},\r\n                    {char: \"600\", x: 70, y: 600},\r\n                    {char: \"400\", x: 70, y: 400},\r\n                    {char: \"200\", x: 70, y: 200},\r\n                    {char: \"0\", x: 70, y: 0},\r\n                ], \"0\", \"0\")\r\n\r\n                let data2 = this.createPaletteHelper({\r\n                    1.0: \"#D32F2F\",\r\n                    0.5: \"#FFC107\",\r\n                    0.0: \"#388E3C\",\r\n                }, [\r\n                    {char: \"1600\", x: 5, y: 790},\r\n                    {char: \"1400\", x: 5, y: 600},\r\n                    {char: \"1200\", x: 5, y: 400},\r\n                    {char: \"1000\", x: 5, y: 200},\r\n                    {char: \"800\", x: 5, y: 0},\r\n                ], \"\", \"0\", \"0\")\r\n\r\n                return {\r\n                    canvas: [data1.canvas, data2.canvas],\r\n                    pickColor: function (position) {\r\n                        if (position > 800) {\r\n                            position = 10 + position - 800\r\n                            return data2.colorData.slice(position * 400, position * 400 + 3)\r\n                        } else {\r\n                            return data1.colorData.slice(position * 400, position * 400 + 3)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            createPaletteHelper: function (colorStops, texts, left, top, right) {\r\n                //颜色条的大小\r\n                let width = 100, height = 820\r\n\r\n                // 创建canvas\r\n                let paletteCanvas = document.createElement(\"canvas\")\r\n                paletteCanvas.width = width\r\n                paletteCanvas.height = height\r\n                paletteCanvas.style.position = 'absolute'\r\n                paletteCanvas.style.top = top\r\n                paletteCanvas.style.left = left\r\n                paletteCanvas.style.right = right\r\n                let ctx = paletteCanvas.getContext(\"2d\")\r\n\r\n                // 创建线性渐变色\r\n                let linearGradient = ctx.createLinearGradient(0, 0, 0, height)\r\n                for (let key in colorStops) {\r\n                    linearGradient.addColorStop(parseFloat(key), colorStops[key])\r\n                }\r\n\r\n                // 绘制渐变色条\r\n                ctx.fillStyle = linearGradient\r\n                ctx.fillRect(0, 0, width, height)\r\n\r\n                ctx.font = '16px \"微软雅黑\"'\r\n                ctx.fillStyle = \"white\"\r\n                ctx.textBaseline = \"top\"\r\n                for (let text of texts) {\r\n                    ctx.fillText(text.char, text.x, text.y)\r\n                }\r\n\r\n                return {colorData: ctx.getImageData(0, 0, width, height).data, canvas: paletteCanvas}\r\n            },\r\n            buildShapes: function (coordinate, rollers, coolingZones, segments) {\r\n                // outline\r\n                this.buildCooler(this.rOut, this.rIn, coordinate, rollers, coolingZones, segments)\r\n\r\n                // internal\r\n                this.buildInternalShapes()\r\n            },\r\n            buildCooler: function (rOut, rIn, coordinate, rollers, coolingZones, segments) {\r\n                let mdDistanceToCenter = coordinate.center_start_distance / this.zScale + coordinate.level_height / this.zScale - this.md / 2\r\n                const group = new THREE.Group()\r\n                this.coolerMaterial = new THREE.MeshBasicMaterial({\r\n                    color: 0x0097A7,\r\n                    opacity: 0.5,\r\n                    transparent: true,\r\n                });\r\n                // 宽面\r\n                const geometry1 = new THREE.BoxGeometry(this.yLength / 2, this.md, this.xLength);\r\n                const cube1 = new THREE.Mesh(geometry1, this.coolerMaterial);\r\n                cube1.position.set(-rOut - this.yLength / 4, mdDistanceToCenter, 0)\r\n                group.add(cube1)\r\n\r\n                const cube2 = new THREE.Mesh(geometry1, this.coolerMaterial);\r\n                cube2.position.set(-rIn + this.yLength / 4, mdDistanceToCenter, 0)\r\n                group.add(cube2)\r\n                // 窄面\r\n                const geometry2 = new THREE.BoxGeometry(this.yLength, this.md, this.yLength / 2);\r\n                const cube3 = new THREE.Mesh(geometry2, this.coolerMaterial);\r\n                cube3.position.set(-rOut + this.yLength / 2, mdDistanceToCenter, this.xLength / 2 + this.yLength / 4)\r\n                group.add(cube3)\r\n\r\n                const cube4 = new THREE.Mesh(geometry2, this.coolerMaterial);\r\n                cube4.position.set(-rOut + this.yLength / 2, mdDistanceToCenter, -this.xLength / 2 - this.yLength / 4)\r\n                group.add(cube4)\r\n\r\n                let roller = {}\r\n                let position = 0, xIn = 0, yIn = 0, xOut = 0, yOut = 0, angle = 0\r\n                for (let i = 0; i < rollers.length; i += 1) {\r\n                    roller = rollers[i]\r\n                    position = (roller.distance + coordinate.level_height) / this.zScale\r\n                    let geometryCylinder = new THREE.CylinderGeometry(roller.outer_diameter / this.zScale / 2, roller.outer_diameter / this.zScale / 2, this.xLength, this.xLength)\r\n                    const cylinder1 = new THREE.Mesh(geometryCylinder, this.coolerMaterial)\r\n                    cylinder1.rotateX(90 * Math.PI / 180)\r\n                    const cylinder2 = new THREE.Mesh(geometryCylinder, this.coolerMaterial);\r\n                    cylinder2.rotateX(90 * Math.PI / 180)\r\n                    if (position < this.centerStart) {\r\n                        xOut = -rOut - roller.outer_diameter / this.zScale / 2\r\n                        yOut = roller.outer_y / this.zScale\r\n                        xIn = -rIn + roller.inner_diameter / this.zScale / 2\r\n                        yIn = roller.inner_y / this.zScale\r\n                    } else if (position >= this.centerStart && position <= this.centerEnd) {\r\n                        angle = 90 * (roller.distance - coordinate.center_start_distance) / this.arcLength * Math.PI / 180\r\n                        let xy1 = this.calculateXY(0, 0, rOut + roller.outer_diameter / this.zScale / 2, angle)\r\n                        xOut = xy1.x2\r\n                        yOut = xy1.y2\r\n                        let xy2 = this.calculateXY(0, 0, rIn - roller.inner_diameter / this.zScale / 2, angle)\r\n                        xIn = xy2.x2\r\n                        yIn = xy2.y2\r\n                    } else {\r\n                        xOut = roller.outer_x / this.zScale\r\n                        yOut = -rOut - roller.outer_diameter / this.zScale / 2\r\n                        xIn = roller.inner_x / this.zScale\r\n                        yIn = -rIn + roller.inner_diameter / this.zScale / 2\r\n                    }\r\n                    cylinder1.position.set(xOut, yOut, 0)\r\n                    cylinder2.position.set(xIn, yIn, 0)\r\n                    group.add(cylinder1)\r\n                    group.add(cylinder2)\r\n                }\r\n\r\n                this.group.add(group)\r\n                // 添加冷却区和设备分区标记\r\n                this.loadFont(rIn, coordinate, rollers, coolingZones, segments)\r\n                // 添加冷却区和设备分区划分标记\r\n                this.buildMark(rIn, coordinate, rollers, coolingZones, segments)\r\n                this.casterLoaded = true\r\n            },\r\n            loadFont: function (rIn, coordinate, rollers, coolingZones, segments) {\r\n                let offset = 70 // 冷却区标记放置位置偏移量\r\n                let offset1 = 170 // 设备标记放置位置偏移量\r\n                let mdDistanceToCenter = (coordinate.center_start_distance + coordinate.level_height) / this.zScale - this.md / 2\r\n\r\n                this.textMatForCaster = new THREE.MeshLambertMaterial({color: 0x212121})\r\n                this.textMatForCooling = new THREE.MeshLambertMaterial({color: 0x00796B})\r\n                let loader = new FontLoader()\r\n                this.font = loader.parse(fontJson);\r\n\r\n                // 结晶器标记\r\n                this.createText(\"MD\", -rIn + offset, mdDistanceToCenter, 0, 0, this.textMatForCaster);\r\n\r\n                let zone = {}\r\n                let x, y, angle = 0\r\n                let position, index = 0\r\n                // 构建冷却区标记\r\n                for (let i = 0; i < coolingZones.length; i++) {\r\n                    zone = coolingZones[i]\r\n                    index = ((zone.start + zone.end) >> 1) - 1\r\n                    position = (rollers[index].distance + coordinate.level_height) / this.zScale\r\n                    if (position < this.centerStart) {\r\n                        x = -rIn + offset\r\n                        y = rollers[index].inner_y / this.zScale\r\n                        angle = 0\r\n                    } else if (position >= this.centerStart && position <= this.centerEnd) {\r\n                        angle = 90 * (rollers[index].distance - coordinate.center_start_distance) / this.arcLength * Math.PI / 180\r\n                        let xy = this.calculateXY(0, 0, rIn - offset, angle)\r\n                        x = xy.x2\r\n                        y = xy.y2\r\n                    } else {\r\n                        x = rollers[index].inner_x / this.zScale\r\n                        y = -rIn + offset\r\n                        angle = 90 * Math.PI / 180\r\n                    }\r\n                    this.createText(zone.zone_name, x, y, this.xLength / 2, angle, this.textMatForCooling);\r\n                }\r\n                let segment = {}\r\n                // 构建设备标记\r\n                for (let i = 1; i < segments.length; i++) {\r\n                    segment = segments[i]\r\n                    index = ((segment.start + segment.end) >> 1) - 1\r\n                    position = (rollers[index].distance + coordinate.level_height) / this.zScale\r\n                    if (position < this.centerStart) {\r\n                        x = -rIn + offset1\r\n                        y = rollers[index].inner_y / this.zScale\r\n                        angle = 0\r\n                    } else if (position >= this.centerStart && position <= this.centerEnd) {\r\n                        angle = 90 * (rollers[index].distance - coordinate.center_start_distance) / this.arcLength * Math.PI / 180\r\n                        let xy = this.calculateXY(0, 0, rIn - offset1, angle)\r\n                        x = xy.x2\r\n                        y = xy.y2\r\n                    } else {\r\n                        x = rollers[index].inner_x / this.zScale\r\n                        y = -rIn + offset1\r\n                        angle = 90 * Math.PI / 180\r\n                    }\r\n                    this.createText(segment.seg, x, y, 0, angle, this.textMatForCaster);\r\n                }\r\n            },\r\n            createText: function (txt, x, y, z, angle, material) {\r\n                let textGeo = new TextGeometry(txt, {\r\n                    font: this.font,\r\n                    size: this.fontSize,\r\n                    height: this.fontHeight,\r\n                    curveSegments: this.curveSegments,\r\n                    weight: \"normal\",\r\n                    bevelThickness: this.bevelThickness,\r\n                    bevelSize: this.bevelSize,\r\n                    bevelSegments: this.bevelSegments,\r\n                    bevelEnabled: this.bevelEnabled\r\n                });\r\n                textGeo.computeBoundingBox();\r\n                textGeo.computeVertexNormals();\r\n                let text = new THREE.Mesh(textGeo, material)\r\n                text.position.set(x, y, z)\r\n                text.rotateZ(angle)\r\n                text.castShadow = true;\r\n                this.group.add(text)\r\n            },\r\n            buildMark: function (rIn, coordinate, rollers, coolingZones, segments) {\r\n                let offset = 50 // 冷却区标记长度\r\n                let offset1 = 150 // 设备标记长度\r\n                const group = new THREE.Group()\r\n                this.matForCaster = new THREE.LineBasicMaterial({color: 0x212121})\r\n                this.matForCooling = new THREE.LineBasicMaterial({color: 0x00796B})\r\n\r\n                let zone = {}\r\n                let zForCaster = 0\r\n                let zForCooling = this.xLength / 2\r\n                // 构建冷却区标记\r\n                for (let i = 0; i < coolingZones.length; i++) {\r\n                    zone = coolingZones[i]\r\n                    this.buildMarkHelper1(zone.start - 1, rollers, coordinate, this.rIn, offset, this.matForCooling, group, zForCooling)\r\n                    this.buildMarkHelper1(zone.end - 1, rollers, coordinate, this.rIn, offset, this.matForCooling, group, zForCooling)\r\n                    this.buildMarkHelper2(zone.start - 1, zone.end - 1, rollers, coordinate, rIn, offset, this.matForCooling, group, zForCooling)\r\n                }\r\n\r\n                // 构建设备标记\r\n                let segment = {}\r\n                for (let i = 1; i < segments.length; i++) {\r\n                    segment = segments[i]\r\n                    this.buildMarkHelper1(segment.start - 1, rollers, coordinate, this.rIn, offset1, this.matForCaster, group, zForCaster)\r\n                    this.buildMarkHelper1(segment.end - 1, rollers, coordinate, this.rIn, offset1, this.matForCaster, group, zForCaster)\r\n                    this.buildMarkHelper2(segment.start - 1, segment.end - 1, rollers, coordinate, rIn, offset1, this.matForCaster, group, zForCaster)\r\n                }\r\n\r\n                this.group.add(group)\r\n            },\r\n            buildMarkHelper2: function (start, end, rollers, coordinate, rIn, offset, material, group, z) {\r\n                let position, angle = 0\r\n                let x1, y1, x2, y2\r\n                let points = []\r\n                position = (rollers[start].distance + coordinate.level_height) / this.zScale\r\n                if (position <= this.centerStart) {\r\n                    x1 = -rIn + offset\r\n                    y1 = rollers[start].inner_y / this.zScale\r\n                } else if (position >= this.centerStart && position <= this.centerEnd) {\r\n                    angle = 90 * (rollers[start].distance - coordinate.center_start_distance) / this.arcLength * Math.PI / 180\r\n                    let xy1 = this.calculateXY(0, 0, rIn - offset, angle)\r\n                    x1 = xy1.x2\r\n                    y1 = xy1.y2\r\n                } else {\r\n                    x1 = rollers[start].inner_x / this.zScale\r\n                    y1 = -rIn + offset\r\n                }\r\n                position = (rollers[end].distance + coordinate.level_height) / this.zScale\r\n                if (position <= this.centerStart) {\r\n                    x2 = -rIn + offset\r\n                    y2 = rollers[end].inner_y / this.zScale\r\n                } else if (position >= this.centerStart && position <= this.centerEnd) {\r\n                    angle = 90 * (rollers[end].distance - coordinate.center_start_distance) / this.arcLength * Math.PI / 180\r\n                    let xy1 = this.calculateXY(0, 0, rIn - offset, angle)\r\n                    x2 = xy1.x2\r\n                    y2 = xy1.y2\r\n                } else {\r\n                    x2 = rollers[end].inner_x / this.zScale\r\n                    y2 = -rIn + offset\r\n                }\r\n                points.push(new THREE.Vector3(x1, y1, z), new THREE.Vector3(x2, y2, z))\r\n                group.add(this.setLine(points, material))\r\n            },\r\n            buildMarkHelper1: function (index, rollers, coordinate, rIn, offset, material, group, z) {\r\n                let position, angle = 0\r\n                let x1, y1, x2, y2\r\n                let points = []\r\n                position = (rollers[index].distance + coordinate.level_height) / this.zScale\r\n                if (position <= this.centerStart) {\r\n                    x1 = -rIn\r\n                    y1 = rollers[index].inner_y / this.zScale\r\n                    x2 = x1 + offset\r\n                    y2 = y1\r\n                } else if (position >= this.centerStart && position <= this.centerEnd) {\r\n                    angle = 90 * (rollers[index].distance - coordinate.center_start_distance) / this.arcLength * Math.PI / 180\r\n                    let xy1 = this.calculateXY(0, 0, rIn, angle)\r\n                    x1 = xy1.x2\r\n                    y1 = xy1.y2\r\n                    let xy2 = this.calculateXY(0, 0, rIn - offset, angle)\r\n                    x2 = xy2.x2\r\n                    y2 = xy2.y2\r\n                } else {\r\n                    x1 = rollers[index].inner_x / this.zScale\r\n                    y1 = -rIn\r\n                    x2 = x1\r\n                    y2 = y1 + offset\r\n                }\r\n                points.push(new THREE.Vector3(x1, y1, z), new THREE.Vector3(x2, y2, z))\r\n                group.add(this.setLine(points, material))\r\n            },\r\n            setLine: function (points, material) {\r\n                const geometry = new THREE.BufferGeometry().setFromPoints(points)\r\n                return new THREE.Line(geometry, material)\r\n            },\r\n            buildInternalShapesNotFull(rOut, rIn, data) {\r\n                let colors = []\r\n                let positions = []\r\n                let xStep = data.x_scale\r\n                let yStep = data.y_scale\r\n                let zStep = data.z_scale\r\n                let width = data.sides.up.length\r\n                let length = data.sides.up[0].length\r\n                let halfLength = length / 2 * xStep\r\n                if (data.end - data.start >= zStep) {\r\n                    // down特殊处理，因为总是需要底部的切片\r\n                    for (let i = 0; i < width; i++) {\r\n                        for (let j = 0; j < length; j++) {\r\n                            // positions\r\n                            if (data.end <= this.centerStart) {\r\n                                let z = j * xStep - halfLength\r\n                                positions.push(-rIn - i * yStep, this.centerStart - data.end - this.levelHeight, z)\r\n                            } else if (data.end <= this.centerEnd) {\r\n                                let r = rIn + i * yStep\r\n                                let xy = this.calculateXY(0, 0, r, 90 * (data.end - this.centerStart) * this.zScale / this.arcLength * Math.PI / 180)\r\n                                const x = xy.x2\r\n                                const y = xy.y2\r\n                                let z = j * xStep - halfLength\r\n                                positions.push(x, y, z)\r\n                            } else {\r\n                                let z = j * xStep - halfLength\r\n                                positions.push(data.end - this.centerEnd, -rIn - i * yStep, z)\r\n                            }\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.down[i][j]) % this.originTemperature)\r\n\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // up\r\n                    for (let i = 0; i < width; i++) {\r\n                        for (let j = 0; j < length; j++) {\r\n                            // positions\r\n                            if (data.start <= this.centerStart) {\r\n                                let z = j * xStep - halfLength\r\n                                positions.push(-rIn - i * yStep, this.centerStart - data.start - this.levelHeight, z)\r\n                            } else if (data.start <= this.centerEnd) {\r\n                                let r = rIn + i * yStep\r\n                                let xy = this.calculateXY(0, 0, r, 90 * (data.start - this.centerStart)  * this.zScale / this.arcLength * Math.PI / 180)\r\n                                const x = xy.x2\r\n                                const y = xy.y2\r\n                                let z = j * xStep - halfLength\r\n                                positions.push(x, y, z)\r\n                            } else {\r\n                                let z = j * xStep - halfLength\r\n                                positions.push(data.start - this.centerEnd, -rIn - i * yStep, z)\r\n                            }\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.up[i][j]) % this.originTemperature)\r\n\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    if (data.end - data.start >= zStep) { // 入口部分\r\n                        let end = Math.ceil(Math.min(data.end, this.centerStart) / zStep)\r\n                        let start = Math.floor(Math.max(data.start, 0) / zStep)\r\n                        // left\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < width; j++) {\r\n                                // positions\r\n                                const x = -rIn - j * yStep\r\n                                const y = this.centerStart - i * zStep - this.levelHeight\r\n                                positions.push(x, y, halfLength)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.left[i][j]) % this.originTemperature)\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                        }\r\n                        // right\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < width; j++) {\r\n                                // positions\r\n                                const x = -rIn - j * yStep\r\n                                const y = this.centerStart - i * zStep - this.levelHeight\r\n                                positions.push(x, y, -halfLength)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.right[i][j]) % this.originTemperature)\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                        }\r\n                        // front\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < length; j++) {\r\n                                // positions\r\n                                const z = j * xStep - halfLength\r\n                                const y = this.centerStart - i * zStep - this.levelHeight\r\n                                positions.push(-rIn, y, z)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.front[i][j]) % this.originTemperature)\r\n\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                        }\r\n                        // back\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < length; j++) {\r\n                                // positions\r\n                                const z = j * xStep - halfLength\r\n                                const y = this.centerStart - i * zStep - this.levelHeight\r\n                                positions.push(-rOut, y, z)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.back[i][j]) % this.originTemperature)\r\n\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                        }\r\n                    }\r\n                    if (data.end > this.centerStart) { // 弧形部分\r\n                        let end = Math.ceil(Math.min(data.end, this.centerEnd) / zStep)\r\n                        let start = Math.floor(Math.max(data.start, this.centerStart) / zStep)\r\n                        // left\r\n                        let xStart = 0\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < width; j++) {\r\n                                // positions\r\n                                let xy = this.calculateXY(0, 0, rIn + j * yStep, 90 * xStart * zStep * this.zScale / this.arcLength * Math.PI / 180)\r\n                                const x = xy.x2\r\n                                const y = xy.y2\r\n                                positions.push(x, y, halfLength)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.left[i][j]) % this.originTemperature)\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                            xStart++\r\n                        }\r\n                        // right\r\n                        xStart = 0\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < width; j++) {\r\n                                // positions\r\n                                let xy = this.calculateXY(0, 0, rIn + j * yStep, 90 * xStart * zStep * this.zScale / this.arcLength * Math.PI / 180)\r\n                                const x = xy.x2\r\n                                const y = xy.y2\r\n                                positions.push(x, y, -halfLength)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.right[i][j]) % this.originTemperature)\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                            xStart++\r\n                        }\r\n                        // back\r\n                        xStart = 0\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < length; j++) {\r\n                                // positions\r\n                                let xy = this.calculateXY(0, 0, rOut, 90 * xStart * zStep * this.zScale / this.arcLength * Math.PI / 180)\r\n                                const x = xy.x2\r\n                                const y = xy.y2\r\n                                positions.push(x, y, j * xStep - halfLength)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.back[i][j]) % this.originTemperature)\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                            xStart++\r\n                        }\r\n                        // front\r\n                        xStart = 0\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < length; j++) {\r\n                                // positions\r\n                                let xy = this.calculateXY(0, 0, rIn, 90 * xStart * zStep * this.zScale / this.arcLength * Math.PI / 180)\r\n                                const x = xy.x2\r\n                                const y = xy.y2\r\n                                positions.push(x, y, j * xStep - halfLength)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.front[i][j]) % this.originTemperature)\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                            xStart++\r\n                        }\r\n                    }\r\n\r\n                    if (data.end > this.centerEnd) { // 出口部分\r\n                        let end = Math.ceil(data.end / zStep)\r\n                        let start = Math.floor(Math.max(data.start, this.centerEnd) / zStep)\r\n                        // left\r\n                        let xStart = 0\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < width; j++) {\r\n                                // positions\r\n                                positions.push(xStart * zStep, -(rIn + j * yStep), halfLength)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.left[i][j]) % this.originTemperature)\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                            xStart++\r\n                        }\r\n                        // right\r\n                        xStart = 0\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < width; j++) {\r\n                                // positions\r\n                                positions.push(xStart * zStep, -(rIn + j * yStep), -halfLength)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.right[i][j]) % this.originTemperature)\r\n\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                            xStart++\r\n                        }\r\n                        // back\r\n                        xStart = 0\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < length; j++) {\r\n                                // positions\r\n                                const z = j * xStep - halfLength\r\n                                positions.push(xStart * zStep, -rOut, z)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.back[i][j]) % this.originTemperature)\r\n\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                            xStart++\r\n                        }\r\n                        // front\r\n                        xStart = 0\r\n                        for (let i = start; i < end; i++) {\r\n                            for (let j = 0; j < length; j++) {\r\n                                // positions\r\n                                const z = j * xStep - halfLength\r\n                                positions.push(xStart * zStep, -rIn, z)\r\n                                // colors\r\n                                const arr = this.heatmap.pickColor(Math.floor(data.sides.front[i][j]) % this.originTemperature)\r\n\r\n                                const vx = arr[0] / 255\r\n                                const vy = arr[1] / 255\r\n                                const vz = arr[2] / 255\r\n\r\n                                colors.push(vx, vy, vz)\r\n                            }\r\n                            xStart++\r\n                        }\r\n                    }\r\n                }\r\n                this.colors = colors\r\n                this.positions = positions\r\n                this.points.geometry.setAttribute('position', new THREE.Float32BufferAttribute(this.positions, 3));\r\n                this.points.geometry.setAttribute('color', new THREE.Float32BufferAttribute(this.colors, 3));\r\n                this.points.geometry.computeBoundingSphere();\r\n            },\r\n            buildInternalShapesFull: function (rOut, rIn, data) {\r\n                let colors = []\r\n                let width = data.sides.up.length\r\n                let length = data.sides.up[0].length\r\n                // down\r\n                for (let i = 0; i < width; i++) {\r\n                    for (let j = 0; j < length; j++) {\r\n                        // colors\r\n                        const arr = this.heatmap.pickColor(Math.floor(data.sides.down[i][j]) % this.originTemperature)\r\n\r\n                        const vx = arr[0] / 255\r\n                        const vy = arr[1] / 255\r\n                        const vz = arr[2] / 255\r\n\r\n                        colors.push(vx, vy, vz)\r\n                    }\r\n                }\r\n                // up\r\n                for (let i = 0; i < width; i++) {\r\n                    for (let j = 0; j < length; j++) {\r\n                        // colors\r\n                        const arr = this.heatmap.pickColor(Math.floor(data.sides.up[i][j]) % this.originTemperature)\r\n\r\n                        const vx = arr[0] / 255\r\n                        const vy = arr[1] / 255\r\n                        const vz = arr[2] / 255\r\n\r\n                        colors.push(vx, vy, vz)\r\n                    }\r\n                }\r\n                { // 结晶器部分\r\n                    let end = Math.ceil(Math.min(data.end, this.centerStart))\r\n                    let start = Math.floor(Math.max(data.start, 0))\r\n                    // left\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < width; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.left[i][j]) % this.originTemperature)\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // right\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < width; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.right[i][j]) % this.originTemperature)\r\n\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // front\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < length; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.front[i][j]) % this.originTemperature)\r\n\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // back\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < length; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.back[i][j]) % this.originTemperature)\r\n\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                { // 弧形部分\r\n                    let end = Math.ceil(Math.min(data.end, this.centerEnd))\r\n                    let start = Math.floor(Math.max(data.start, this.centerStart))\r\n                    // left\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < width; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.left[i][j]) % this.originTemperature)\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // right\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < width; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.right[i][j]) % this.originTemperature)\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // back\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < length; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.back[i][j]) % this.originTemperature)\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // front\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < length; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.front[i][j]) % this.originTemperature)\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                { // 出口部分\r\n                    let end = Math.ceil(data.end)\r\n                    let start = Math.floor(Math.max(data.start, this.centerEnd))\r\n                    // left\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < width; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.left[i][j]) % this.originTemperature)\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // right\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < width; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.right[i][j]) % this.originTemperature)\r\n\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // back\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < length; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.back[i][j]) % this.originTemperature)\r\n\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                    // front\r\n                    for (let i = start; i < end; i++) {\r\n                        for (let j = 0; j < length; j++) {\r\n                            // colors\r\n                            const arr = this.heatmap.pickColor(Math.floor(data.sides.front[i][j]) % this.originTemperature)\r\n\r\n                            const vx = arr[0] / 255\r\n                            const vy = arr[1] / 255\r\n                            const vz = arr[2] / 255\r\n\r\n                            colors.push(vx, vy, vz)\r\n                        }\r\n                    }\r\n                }\r\n                this.colors = colors\r\n                this.points.geometry.setAttribute('color', new THREE.Float32BufferAttribute(this.colors, 3));\r\n            },\r\n            buildInternalShapes: function () {\r\n                const geometry = new THREE.BufferGeometry();\r\n                geometry.setAttribute('position', new THREE.Float32BufferAttribute(this.positions, 3));\r\n                geometry.setAttribute('color', new THREE.Float32BufferAttribute(this.colors, 3));\r\n                geometry.computeBoundingSphere();\r\n                const material = new THREE.PointsMaterial({size: 5, vertexColors: true});\r\n                this.points = new THREE.Points(geometry, material);\r\n                this.group.add(this.points)\r\n            },\r\n            calculateXY: function (x1, y1, r, angle) {\r\n                return {\r\n                    x2: x1 - r * Math.cos(angle),\r\n                    y2: y1 - r * Math.sin(angle)\r\n                }\r\n            },\r\n            switchVisibility: function () {\r\n                this.coolerMaterial.visible = this.visible\r\n                this.textMatForCaster.visible = this.visible\r\n                this.textMatForCooling.visible = this.visible\r\n                this.matForCaster.visible = this.visible\r\n                this.matForCooling.visible = this.visible\r\n            }\r\n        },\r\n        mounted() {\r\n            this.container = document.getElementById(\"container\")\r\n            this.width = this.container.clientWidth\r\n            this.height = this.container.clientHeight\r\n\r\n            this.init()\r\n            this.animate()\r\n\r\n            let self = this\r\n            this.$root.$on(\"caster_info\", (data) => {\r\n                console.log(data)\r\n                self.originMd = data.md.length\r\n                self.originXLength = data.coordinate.length\r\n                self.originYLength = data.coordinate.width\r\n                self.levelHeight = data.coordinate.level_height / self.zScale\r\n\r\n                self.zScale = data.coordinate.z_scale\r\n                self.xScale = data.coordinate.x_scale\r\n                self.yScale = data.coordinate.y_scale\r\n\r\n                self.md = self.originMd / self.zScale\r\n                self.xLength = self.originXLength / self.xScale\r\n                self.yLength = self.originYLength / self.yScale\r\n\r\n                self.rOut = data.coordinate.r / self.zScale\r\n                self.rIn = self.rOut - self.yLength\r\n\r\n                self.arcLength = data.coordinate.center_end_distance - data.coordinate.center_start_distance\r\n\r\n                // 获取近似圆弧的起始位置距离液面的距离\r\n                self.centerStart = (data.coordinate.center_start_distance + data.coordinate.level_height) / self.zScale\r\n                self.centerEnd = (data.coordinate.center_end_distance + data.coordinate.level_height) / self.zScale\r\n                self.arcStart = (data.coordinate.arc_start_distance + data.coordinate.level_height) / self.zScale\r\n                self.arcEnd = (data.coordinate.arc_end_distance + data.coordinate.level_height) / self.zScale\r\n\r\n                self.buildShapes(data.coordinate, data.secondary_cooling_zone, data.cooling_zone, data.segments)\r\n            })\r\n\r\n            this.$root.$on(\"new_field_data\", (data) => {\r\n                console.log(data)\r\n\r\n                if (data.is_full) {\r\n                    this.fullCount++\r\n                    if (this.fullCount > 2) {\r\n                        this.fullCount = 2\r\n                    }\r\n                }\r\n                if (!data.is_full || this.fullCount === 1) { // 第一次切片充满时需要添加新增加切片的位置数据\r\n                    // console.log(\"not full\")\r\n                    this.buildInternalShapesNotFull(this.rOut, this.rIn, data)\r\n                } else {\r\n                    // console.log(\"full\")\r\n                    this.buildInternalShapesFull(this.rOut, this.rIn, data)\r\n                }\r\n            })\r\n\r\n            this.$root.$on(\"data_generated\", (data) => {\r\n                console.log(data)\r\n                this.buildInternalShapesNotFull(this.rOut, this.rIn, data)\r\n            })\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #container {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n    }\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeDField.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeDField.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ThreeDField.vue?vue&type=template&id=0825d1c4&scoped=true&\"\nimport script from \"./ThreeDField.vue?vue&type=script&lang=js&\"\nexport * from \"./ThreeDField.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ThreeDField.vue?vue&type=style&index=0&id=0825d1c4&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0825d1c4\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"slice_container\"}},[_c('div',{staticClass:\"currentIndex font_glow\"},[_c('span',[_vm._v(\"当前横截面距离液面顶端距离 \"+_vm._s(_vm.sliceIndex)+\" mm\")])]),_c('div',{staticClass:\"data_info1 font_glow\"},[_c('div',[_vm._v(\"窄边中轴线铸壳厚度：\"+_vm._s(_vm.HorizontalSolidThickness)+\"mm / 1260mm\")]),_c('br'),_c('div',[_vm._v(\"窄边中轴线液相线离边缘距离：\"+_vm._s(_vm.HorizontalLiquidThickness)+\"mm / 1260mm\")])]),_c('div',{staticClass:\"data_info2 font_glow\"},[_c('div',[_vm._v(\"宽边中轴线铸壳厚度：\"+_vm._s(_vm.VerticalSolidThickness)+\"mm / 230mm\")]),_c('br'),_c('div',[_vm._v(\"宽边中轴线液相线离边缘距离：\"+_vm._s(_vm.VerticalLiquidThickness)+\"mm / 230mm\")])]),_c('div',{staticClass:\"operation\"},[_c('el-input-number',{attrs:{\"size\":\"normal\",\"step\":1,\"max\":_vm.max,\"min\":1},model:{value:(_vm.sliceIndex),callback:function ($$v) {_vm.sliceIndex=$$v},expression:\"sliceIndex\"}}),_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"size\":\"normal\",\"round\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.showSliceDetail(_vm.sliceIndex)}}},[_vm._v(\"查看距离液面距离对应的横截面 \")])],1),_c('div',{staticClass:\"temp font_glow\"},[_vm._v(\" 当前点温度：\"+_vm._s(_vm.pointTemp.toFixed(4))+\" ℃ \")]),_c('div',{staticClass:\"bottom\"},[_c('div',{staticClass:\"slider_container\"},[_c('div',{staticClass:\"block block1 slider-demo-block\"},[_c('span',{staticClass:\"demonstration\"},[_vm._v(\"设备分区信息\")]),_c('el-slider',{attrs:{\"max\":_vm.max,\"marks\":_vm.casterMarks,\"step\":1},model:{value:(_vm.sliceIndex),callback:function ($$v) {_vm.sliceIndex=$$v},expression:\"sliceIndex\"}})],1),_c('div',{staticClass:\"block block2 slider-demo-block\"},[_c('span',{staticClass:\"demonstration\"},[_vm._v(\"冷却区分区信息\")]),_c('el-slider',{attrs:{\"max\":_vm.max,\"marks\":_vm.coolingMarks,\"step\":1},model:{value:(_vm.sliceIndex),callback:function ($$v) {_vm.sliceIndex=$$v},expression:\"sliceIndex\"}})],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"slice_container\">\r\n        <div class=\"currentIndex font_glow\">\r\n            <span>当前横截面距离液面顶端距离 {{sliceIndex}} mm</span>\r\n        </div>\r\n        <div class=\"data_info1 font_glow\">\r\n            <div>窄边中轴线铸壳厚度：{{HorizontalSolidThickness}}mm / 1260mm</div>\r\n            <br>\r\n            <div>窄边中轴线液相线离边缘距离：{{HorizontalLiquidThickness}}mm / 1260mm</div>\r\n        </div>\r\n        <div class=\"data_info2 font_glow\">\r\n            <div>宽边中轴线铸壳厚度：{{VerticalSolidThickness}}mm / 230mm</div>\r\n            <br>\r\n            <div>宽边中轴线液相线离边缘距离：{{VerticalLiquidThickness}}mm / 230mm</div>\r\n        </div>\r\n        <div class=\"operation\">\r\n            <el-input-number size=\"normal\" v-model=\"sliceIndex\" :step=\"1\" :max=\"max\" :min=\"1\"></el-input-number>\r\n            <el-button size=\"normal\" style=\"margin-left: 10px;\" round type=\"primary\"\r\n                       @click=\"showSliceDetail(sliceIndex)\">查看距离液面距离对应的横截面\r\n            </el-button>\r\n        </div>\r\n        <div class=\"temp font_glow\">\r\n            当前点温度：{{ pointTemp.toFixed(4) }} ℃\r\n        </div>\r\n        <div class=\"bottom\">\r\n            <div class=\"slider_container\">\r\n                <div class=\"block block1 slider-demo-block\">\r\n                    <span class=\"demonstration\">设备分区信息</span>\r\n                    <el-slider\r\n                            :max=\"max\"\r\n                            :marks=\"casterMarks\"\r\n                            v-model=\"sliceIndex\"\r\n                            :step=\"1\">\r\n                    </el-slider>\r\n                </div>\r\n                <div class=\"block block2 slider-demo-block\">\r\n                    <span class=\"demonstration\">冷却区分区信息</span>\r\n                    <el-slider\r\n                            :max=\"max\"\r\n                            :marks=\"coolingMarks\"\r\n                            v-model=\"sliceIndex\"\r\n                            :step=\"1\">\r\n                    </el-slider>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import * as THREE from \"three\";\r\n    // import OrbitControls from \"three-orbitcontrols\";\r\n\r\n    export default {\r\n        name: \"SliceShow\",\r\n        props: ['conn', 'config'],\r\n        data() {\r\n            return {\r\n                casterMarks: {\r\n                    0: '',\r\n                },\r\n                coolingMarks: {\r\n                    0: '',\r\n                },\r\n                max: 0,\r\n                min: 0,\r\n                cap: 0,\r\n                styleStart: \"\",\r\n                styleEnd: \"\",\r\n\r\n                sliceIndex: 1,\r\n\r\n                width: 0,\r\n                height: 0,\r\n\r\n                container: undefined,\r\n                heatmap: undefined,\r\n                scene: undefined,\r\n                camera: undefined,\r\n                group: undefined,\r\n                renderer: undefined,\r\n\r\n                originTemperature: 1601,\r\n                points: undefined,\r\n                positions: [],\r\n                colors: [],\r\n                temps: [],\r\n                sliceWidth: 0,\r\n                sliceHeight: 0,\r\n                scaleFactor: 5,\r\n                // slice info data\r\n                HorizontalSolidThickness: 0,\r\n                HorizontalLiquidThickness: 0,\r\n                VerticalSolidThickness: 0,\r\n                VerticalLiquidThickness: 0,\r\n\r\n                raycaster: undefined,\r\n                pointer: undefined,\r\n                intersects: undefined,\r\n                INTERSECTED: null,\r\n                PARTICLE_SIZE: 10.8,\r\n                pointTemp: 0,\r\n            }\r\n        },\r\n        methods: {\r\n            init: function () {\r\n                this.scene = new THREE.Scene()\r\n                this.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 10000)\r\n                this.camera.position.set(0, 0, 800);\r\n                this.scene.add(new THREE.AmbientLight(0xffffff))\r\n                this.scene.background = new THREE.Color(0xffffff)\r\n\r\n                this.group = new THREE.Group()\r\n                this.scene.add(this.group)\r\n\r\n                this.renderer = new THREE.WebGLRenderer()\r\n                this.renderer.setPixelRatio(window.devicePixelRatio)\r\n                this.renderer.setSize(this.width, this.height)\r\n\r\n                this.heatmap = this.createPalette()\r\n                for (let canvas of this.heatmap.canvas) {\r\n                    this.container.appendChild(canvas)\r\n                }\r\n                this.buildShapesInit()\r\n                this.container.appendChild(this.renderer.domElement)\r\n\r\n                // let controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n                // controls.addEventListener('change', this.render)\r\n\r\n                this.raycaster = new THREE.Raycaster()\r\n                this.pointer = new THREE.Vector2()\r\n\r\n                window.addEventListener('resize', this.onWindowResize, false)\r\n                this.renderer.domElement.addEventListener('pointermove', this.onPointerMove);\r\n            },\r\n            onPointerMove: function (event) {\r\n                this.pointer.x = ((event.clientX - 24) / this.width) * 2 - 1;\r\n                this.pointer.y = -((event.clientY - 10) / this.height) * 2 + 1;\r\n            },\r\n            buildShapesInit: function () {\r\n                let colors = []\r\n                let positions = []\r\n                let temps = []\r\n                let m = this.sliceHeight\r\n                let n = this.sliceWidth\r\n                let hh = m * this.scaleFactor / 2\r\n                let hw = n * this.scaleFactor / 2\r\n                for (let i = 0; i < m; i++) {\r\n                    for (let j = 0; j < n; j++) {\r\n                        positions.push(j * this.scaleFactor - hw, i * this.scaleFactor - hh, 0)\r\n                        const arr = this.heatmap.pickColor(1)\r\n                        const vx = arr[0] / 255\r\n                        const vy = arr[1] / 255\r\n                        const vz = arr[2] / 255\r\n                        colors.push(vx, vy, vz)\r\n                        temps.push(this.pointTemp)\r\n                    }\r\n                }\r\n                this.positions = positions\r\n                this.colors = colors\r\n                this.temps = temps\r\n                const geometry = new THREE.BufferGeometry();\r\n                geometry.setAttribute('position', new THREE.Float32BufferAttribute(this.positions, 3));\r\n                geometry.setAttribute('color', new THREE.Float32BufferAttribute(this.colors, 3));\r\n                geometry.setAttribute('temp', new THREE.Float32BufferAttribute(this.temps, 1));\r\n                geometry.computeBoundingSphere();\r\n                const material = new THREE.PointsMaterial({size: this.PARTICLE_SIZE, vertexColors: true});\r\n                this.points = new THREE.Points(geometry, material);\r\n                this.group.add(this.points)\r\n            },\r\n            buildShapes: function (data) {\r\n                let m = data.length\r\n                if (m === 0) {\r\n                    return\r\n                }\r\n                let n = data[0].length\r\n                if (n === 0) {\r\n                    return\r\n                }\r\n                if (data[0][0] === -1) { // 为空\r\n                    return\r\n                }\r\n                let hh = m * this.scaleFactor / 2\r\n                let hw = n * this.scaleFactor / 2\r\n                let colors = []\r\n                let positions = []\r\n                let temps = []\r\n                for (let i = 0; i < m; i++) {\r\n                    for (let j = 0; j < n; j++) {\r\n                        positions.push(j * this.scaleFactor - hw, i * this.scaleFactor - hh, 0)\r\n                        const arr = this.heatmap.pickColor(Math.floor(data[i][j]) % this.originTemperature)\r\n                        const vx = arr[0] / 255\r\n                        const vy = arr[1] / 255\r\n                        const vz = arr[2] / 255\r\n                        colors.push(vx, vy, vz)\r\n                        temps.push(data[i][j])\r\n                    }\r\n                }\r\n                this.positions = positions\r\n                this.colors = colors\r\n                this.temps = temps\r\n                this.points.geometry.setAttribute('position', new THREE.Float32BufferAttribute(this.positions, 3));\r\n                this.points.geometry.setAttribute('color', new THREE.Float32BufferAttribute(this.colors, 3));\r\n                this.points.geometry.setAttribute('temp', new THREE.Float32BufferAttribute(this.temps, 1));\r\n                this.points.geometry.computeBoundingSphere();\r\n            },\r\n            createPalette: function () {\r\n                //颜色条的颜色分布\r\n                let data1 = this.createPaletteHelper({\r\n                    1.0: \"#388E3C\",\r\n                    0.5: \"#536DFE\",\r\n                    0.0: \"#212121\",\r\n                }, [\r\n                    {char: \"800\", x: 70, y: 790},\r\n                    {char: \"600\", x: 70, y: 600},\r\n                    {char: \"400\", x: 70, y: 400},\r\n                    {char: \"200\", x: 70, y: 200},\r\n                    {char: \"0\", x: 70, y: 0},\r\n                ], \"0\", \"0\")\r\n\r\n                let data2 = this.createPaletteHelper({\r\n                    1.0: \"#D32F2F\",\r\n                    0.5: \"#FFC107\",\r\n                    0.0: \"#388E3C\",\r\n                }, [\r\n                    {char: \"1600\", x: 5, y: 790},\r\n                    {char: \"1400\", x: 5, y: 600},\r\n                    {char: \"1200\", x: 5, y: 400},\r\n                    {char: \"1000\", x: 5, y: 200},\r\n                    {char: \"800\", x: 5, y: 0},\r\n                ], \"\", \"0\", \"0\")\r\n\r\n                return {\r\n                    canvas: [data1.canvas, data2.canvas],\r\n                    pickColor: function (position) {\r\n                        if (position > 800) {\r\n                            position = 10 + position - 800\r\n                            return data2.colorData.slice(position * 400, position * 400 + 3)\r\n                        } else {\r\n                            return data1.colorData.slice(position * 400, position * 400 + 3)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            createPaletteHelper: function (colorStops, texts, left, top, right) {\r\n                //颜色条的大小\r\n                let width = 100, height = 820\r\n\r\n                // 创建canvas\r\n                let paletteCanvas = document.createElement(\"canvas\")\r\n                paletteCanvas.width = width\r\n                paletteCanvas.height = height\r\n                paletteCanvas.style.position = 'absolute'\r\n                paletteCanvas.style.top = top\r\n                paletteCanvas.style.left = left\r\n                paletteCanvas.style.right = right\r\n                let ctx = paletteCanvas.getContext(\"2d\")\r\n\r\n                // 创建线性渐变色\r\n                let linearGradient = ctx.createLinearGradient(0, 0, 0, height)\r\n                for (let key in colorStops) {\r\n                    linearGradient.addColorStop(parseFloat(key), colorStops[key])\r\n                }\r\n\r\n                // 绘制渐变色条\r\n                ctx.fillStyle = linearGradient\r\n                ctx.fillRect(0, 0, width, height)\r\n\r\n                ctx.font = '16px \"微软雅黑\"'\r\n                ctx.fillStyle = \"white\"\r\n                ctx.textBaseline = \"top\"\r\n                for (let text of texts) {\r\n                    ctx.fillText(text.char, text.x, text.y)\r\n                }\r\n\r\n                return {colorData: ctx.getImageData(0, 0, width, height).data, canvas: paletteCanvas}\r\n            },\r\n            onWindowResize: function () {\r\n                this.camera.aspect = this.width / this.height\r\n                this.camera.updateProjectionMatrix()\r\n\r\n                this.renderer.setSize(this.width, this.height)\r\n            },\r\n            animate: function () {\r\n                requestAnimationFrame(this.animate)\r\n                this.render()\r\n            },\r\n            render: function () {\r\n                const geometry = this.points.geometry;\r\n                const attributes = geometry.attributes;\r\n\r\n                this.raycaster.setFromCamera(this.pointer, this.camera);\r\n\r\n                this.intersects = this.raycaster.intersectObject(this.points, true);\r\n\r\n                if (this.intersects.length > 0) {\r\n                    if (this.INTERSECTED !== this.intersects[0].index) {\r\n                        this.INTERSECTED = this.intersects[0].index\r\n                        this.pointTemp = attributes.temp.array[this.INTERSECTED]\r\n                    }\r\n\r\n                } else if (this.INTERSECTED !== null) {\r\n                    this.INTERSECTED = null;\r\n                }\r\n                this.renderer.render(this.scene, this.camera)\r\n            },\r\n            showSliceDetail: function (index) {\r\n                console.log(this.sliceIndex)\r\n                // let message = {\r\n                //     type: \"start_push_slice_detail\",\r\n                //     content: String(index)\r\n                // }\r\n                index = Math.floor(index / 10) - 1\r\n                let message = {\r\n                    type: \"generate_slice\",\r\n                    content: String(index)\r\n                }\r\n                if (this.conn !== undefined) {\r\n                    this.conn.send(JSON.stringify(message));\r\n                    console.log(\"showSliceDetail\")\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            this.container = document.getElementById(\"slice_container\")\r\n            this.width = this.container.clientWidth\r\n            this.height = this.container.clientHeight\r\n\r\n            this.sliceWidth = this.config.coordinate.length / this.config.coordinate.x_scale\r\n            this.sliceHeight = this.config.coordinate.width / this.config.coordinate.y_scale\r\n            console.log(this.sliceWidth, this.sliceHeight, this.config.coordinate.length, this.config.coordinate.width, this.config.coordinate.x_scale, this.config.coordinate.y_scale)\r\n            this.init()\r\n            this.animate()\r\n\r\n            this.max = this.config.coordinate.z_length\r\n            // 设备分区标记\r\n            this.casterMarks[0] = 'md'\r\n            this.coolingMarks[0] = 'md'\r\n            let index = 0\r\n            let roller = {}\r\n            for (let i = 1; i < this.config.segments.length; i++) {\r\n                index = this.config.segments[i].start - 1\r\n                roller = this.config.secondary_cooling_zone[index]\r\n                this.casterMarks[roller.distance] = this.config.segments[i].seg\r\n            }\r\n\r\n            // 冷却区分区标记\r\n            for (let i = 0; i < this.config.cooling_zone.length; i++) {\r\n                index = this.config.cooling_zone[i].start - 1\r\n                roller = this.config.secondary_cooling_zone[index]\r\n                this.coolingMarks[roller.distance] = '' + (i + 1)\r\n            }\r\n\r\n            let self = this\r\n            // this.$root.$on(\"new_slice_detail\", (data) => {\r\n            //     self.buildShapes(data.slice, self.sliceWidth, self.sliceHeight)\r\n            //     self.marks = data.marks\r\n            //     self.max = data.end\r\n            //     self.sliceLength = data.current\r\n            // })\r\n            //\r\n            // this.$root.$on(\"open_dialog\", () => {\r\n            //     self.showSliceDetail(this.start)\r\n            // })\r\n\r\n            this.$root.$on(\"slice_generated\", (data) => {\r\n                console.log(data)\r\n                self.buildShapes(data.slice, self.sliceWidth, self.sliceHeight)\r\n                self.HorizontalSolidThickness = data.horizontal_solid_thickness\r\n                self.HorizontalLiquidThickness = data.horizontal_liquid_thickness\r\n                self.VerticalSolidThickness = data.vertical_solid_thickness\r\n                self.VerticalLiquidThickness = data.vertical_liquid_thickness\r\n            })\r\n\r\n            // this.showSliceDetail(this.start)\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #slice_container {\r\n        width: 100%;\r\n        height: calc(100vh - 30px);\r\n        border: 1px solid #ddd;\r\n        position: relative;\r\n    }\r\n\r\n    .demonstration {\r\n        display: inline-block;\r\n        padding-top: 5px;\r\n    }\r\n\r\n    .currentIndex {\r\n        position: absolute;\r\n        text-align: center;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        z-index: 999;\r\n        bottom: 250px;\r\n        color: #212121;\r\n        font-size: large;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .data_info1 {\r\n        position: absolute;\r\n        left: 20%;\r\n        top: 20%;\r\n        z-index: 999;\r\n        color: #212121;\r\n        font-size: large;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .data_info2 {\r\n        position: absolute;\r\n        right: 20%;\r\n        top: 20%;\r\n        z-index: 999;\r\n        color: #212121;\r\n        font-size: large;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .data_info div {\r\n        padding: 10px;\r\n    }\r\n\r\n    .bottom {\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        text-align: center;\r\n        width: 100%;\r\n        z-index: 999;\r\n        top: 820px;\r\n        background: white;\r\n    }\r\n\r\n    .temp {\r\n        position: absolute;\r\n        left: 50%;\r\n        transform: translate(-50%, 50%);\r\n        top: 30%;\r\n        color: #212121;\r\n        font-size: large;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .slider_container {\r\n        position: relative;\r\n    }\r\n\r\n    .font_glow {\r\n        text-shadow: 0 0 10px #fff\r\n    }\r\n\r\n    .block {\r\n        background-color: #F0F4C3;\r\n        padding: 0 20px 10px;\r\n        border-top: 1px solid #ddd;\r\n    }\r\n\r\n    .block2 {\r\n        border-bottom: 1px solid #ddd;\r\n    }\r\n\r\n    .slider-demo-block {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .slider-demo-block .el-slider {\r\n        margin-top: 0;\r\n        margin-left: 12px;\r\n    }\r\n    .slider-demo-block .demonstration {\r\n        font-size: 14px;\r\n        line-height: 44px;\r\n        flex: 1;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        margin-bottom: 0;\r\n    }\r\n    .slider-demo-block .demonstration + .el-slider {\r\n        flex: 0 0 93%;\r\n    }\r\n\r\n    .operation {\r\n        position: absolute;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        bottom: 200px;\r\n    }\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slice.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slice.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Slice.vue?vue&type=template&id=1799912c&scoped=true&\"\nimport script from \"./Slice.vue?vue&type=script&lang=js&\"\nexport * from \"./Slice.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Slice.vue?vue&type=style&index=0&id=1799912c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1799912c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"curves_container\"}},[_c('el-tabs',{attrs:{\"type\":\"border-card\"}},[_c('el-tab-pane',{attrs:{\"label\":\"纵切面温度分布云图\"}},[_c('div',{staticClass:\"info\"},[(_vm.solidJoin >= 0)?_c('div',[_vm._v(\"固相线交汇处：\"+_vm._s(_vm.solidJoin * 10)+\" mm\")]):_vm._e(),_c('br'),(_vm.liquidJoin >= 0)?_c('div',[_vm._v(\"液相线交汇处：\"+_vm._s(_vm.liquidJoin * 10)+\" mm\")]):_vm._e()]),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"820px\"},attrs:{\"id\":\"canvas_container\"}}),_c('div',{staticClass:\"slice_bottom\"},[_c('div',{staticClass:\"operation\"},[_c('el-input-number',{attrs:{\"size\":\"mini\",\"step\":1,\"max\":_vm.max,\"min\":1},model:{value:(_vm.index2),callback:function ($$v) {_vm.index2=$$v},expression:\"index2\"}}),_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"size\":\"mini\",\"round\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.showVerticalSlice2AtIndex(_vm.index2-1)}}},[_vm._v(\"查看相应位置纵切片数据 \")])],1),_c('div',{staticClass:\"slider_container\"},[_c('div',[_c('el-slider',{attrs:{\"max\":_vm.max,\"marks\":_vm.marks,\"step\":1},model:{value:(_vm.index2),callback:function ($$v) {_vm.index2=$$v},expression:\"index2\"}})],1)])]),_c('div',{staticClass:\"distance_bottom\"},[_c('div',{staticClass:\"slider_container\"},[_c('div',{staticClass:\"block block1 slider-demo-block\"},[_c('span',{staticClass:\"demonstration\"},[_vm._v(\"设备分区信息\")]),_c('el-slider',{attrs:{\"max\":_vm.maxZLength,\"min\":1,\"marks\":_vm.casterMarks,\"step\":1},on:{\"change\":function($event){return _vm.showEdgeAtYIndex(_vm.yIndex)}},model:{value:(_vm.yIndex),callback:function ($$v) {_vm.yIndex=$$v},expression:\"yIndex\"}})],1),_c('div',{staticClass:\"block block2 slider-demo-block\"},[_c('span',{staticClass:\"demonstration\"},[_vm._v(\"冷却区分区信息\")]),_c('el-slider',{attrs:{\"max\":_vm.maxZLength,\"marks\":_vm.coolingMarks,\"min\":1,\"step\":1},on:{\"change\":function($event){return _vm.showEdgeAtYIndex(_vm.yIndex)}},model:{value:(_vm.yIndex),callback:function ($$v) {_vm.yIndex=$$v},expression:\"yIndex\"}})],1)])])]),_c('el-tab-pane',{attrs:{\"label\":\"温度变化曲线\"}},[_c('v-chart',{staticClass:\"chart\",attrs:{\"option\":_vm.option}}),_c('div',{staticClass:\"bottom\"},[_c('div',{staticClass:\"operation\"},[_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"size\":\"normal\",\"round\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.showVerticalSlice1AtIndex()}}},[_vm._v(\"查看温度曲线数据 \")])],1)])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"curves_container\">\r\n        <el-tabs type=\"border-card\">\r\n            <el-tab-pane label=\"纵切面温度分布云图\">\r\n                <div class=\"info\">\r\n                    <div v-if=\"solidJoin >= 0\">固相线交汇处：{{solidJoin * 10}} mm</div>\r\n                    <br>\r\n                    <div v-if=\"liquidJoin >= 0\">液相线交汇处：{{liquidJoin * 10}} mm</div>\r\n                </div>\r\n                <div id=\"canvas_container\" style=\"width: 100%; height: 820px;\"></div>\r\n                <div class=\"slice_bottom\">\r\n                    <div class=\"operation\">\r\n                        <el-input-number size=\"mini\" v-model=\"index2\" :step=\"1\" :max=\"max\" :min=\"1\"></el-input-number>\r\n                        <el-button size=\"mini\" style=\"margin-left: 10px;\" round type=\"primary\"\r\n                                   @click=\"showVerticalSlice2AtIndex(index2-1)\">查看相应位置纵切片数据\r\n                        </el-button>\r\n                    </div>\r\n                    <div class=\"slider_container\">\r\n                        <div>\r\n                            <el-slider\r\n                                    :max=\"max\"\r\n                                    :marks=\"marks\"\r\n                                    v-model=\"index2\"\r\n                                    :step=\"1\">\r\n                            </el-slider>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"distance_bottom\">\r\n                    <div class=\"slider_container\">\r\n                        <div class=\"block block1 slider-demo-block\">\r\n                            <span class=\"demonstration\">设备分区信息</span>\r\n                            <el-slider\r\n                                    @change=\"showEdgeAtYIndex(yIndex)\"\r\n                                    :max=\"maxZLength\"\r\n                                    :min=\"1\"\r\n                                    :marks=\"casterMarks\"\r\n                                    v-model=\"yIndex\"\r\n                                    :step=\"1\">\r\n                            </el-slider>\r\n                        </div>\r\n                        <div class=\"block block2 slider-demo-block\">\r\n                            <span class=\"demonstration\">冷却区分区信息</span>\r\n                            <el-slider\r\n                                    @change=\"showEdgeAtYIndex(yIndex)\"\r\n                                    :max=\"maxZLength\"\r\n                                    :marks=\"coolingMarks\"\r\n                                    v-model=\"yIndex\"\r\n                                    :min=\"1\"\r\n                                    :step=\"1\">\r\n                            </el-slider>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"温度变化曲线\">\r\n                <v-chart class=\"chart\" :option=\"option\"></v-chart>\r\n                <div class=\"bottom\">\r\n                    <div class=\"operation\">\r\n                        <el-button size=\"normal\" style=\"margin-left: 10px;\" round type=\"primary\"\r\n                                   @click=\"showVerticalSlice1AtIndex()\">查看温度曲线数据\r\n                        </el-button>\r\n                    </div>\r\n                </div>\r\n            </el-tab-pane>\r\n        </el-tabs>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {use} from \"echarts/core\";\r\n    import {LineChart} from \"echarts/charts\";\r\n    import VChart from \"vue-echarts\";\r\n    // import ECharts modules manually to reduce bundle size\r\n    import {CanvasRenderer} from 'echarts/renderers'\r\n    import {GridComponent, LegendComponent, TooltipComponent} from 'echarts/components'\r\n    import * as THREE from \"three\";\r\n    import {FontLoader} from \"three/examples/jsm/loaders/FontLoader\";\r\n    import fontJson from \"../assets/fonts/helvetiker_bold.typeface.json\";\r\n    import {TextGeometry} from \"three/examples/jsm/geometries/TextGeometry\";\r\n\r\n    use([\r\n        CanvasRenderer,\r\n        LineChart,\r\n        GridComponent,\r\n        TooltipComponent,\r\n        LegendComponent\r\n    ])\r\n\r\n    export default {\r\n        components: {\r\n            VChart\r\n        },\r\n        props: ['conn', 'config'],\r\n        data() {\r\n            return {\r\n                marks: {\r\n                    0: \"角部\",\r\n                    630: \"宽面中心\"\r\n                },\r\n                max: 1,\r\n                maxZLength: 1,\r\n                option: {\r\n                    tooltip: {\r\n                        trigger: 'axis',\r\n                        axisPointer: {type: 'cross'}\r\n                    },\r\n                    legend: {\r\n                        orient: \"vertical\",\r\n                        left: \"right\",\r\n                        data: [\"宽面表面中心线\", \"铸坯中心线\", \"角部\", \"窄面表面中心线\"]\r\n                    },\r\n                    xAxis: [\r\n                        {\r\n                            type: 'value',\r\n                            name: '离液面距离',\r\n                            min: 0,\r\n                            max: 0,\r\n                            position: 'left',\r\n                            axisLabel: {\r\n                                formatter: '{value} mm'\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxis: [\r\n                        {\r\n                            type: 'value',\r\n                            name: '温度',\r\n                            min: 0,\r\n                            max: 1600,\r\n                            position: 'left',\r\n                            axisLabel: {\r\n                                formatter: '{value} ℃'\r\n                            }\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: \"宽面表面中心线\",\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            color: \"#FFC107\",\r\n                            xAxisIndex: 0,\r\n                            yAxisIndex: 0,\r\n                            data: []\r\n                        },\r\n                        {\r\n                            name: \"铸坯中心线\",\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            color: \"#FF5252\",\r\n                            xAxisIndex: 0,\r\n                            yAxisIndex: 0,\r\n                            data: []\r\n                        },\r\n                        {\r\n                            name: \"角部\",\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            color: \"#2196F3\",\r\n                            xAxisIndex: 0,\r\n                            yAxisIndex: 0,\r\n                            data: []\r\n                        },\r\n                        {\r\n                            name: \"窄面表面中心线\",\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            color: \"#4CAF50\",\r\n                            xAxisIndex: 0,\r\n                            yAxisIndex: 0,\r\n                            data: []\r\n                        }\r\n                    ]\r\n                },\r\n                container: undefined,\r\n                width: 0,\r\n                height: 0,\r\n                heatmap: undefined,\r\n                scene: undefined,\r\n                camera: undefined,\r\n                group: undefined,\r\n                renderer: undefined,\r\n                originTemperature: 1601,\r\n                points: undefined,\r\n                positions: [],\r\n                colors: [],\r\n                temps: [],\r\n                arcLength: 0,\r\n                xLength: 0,\r\n                yLength: 0,\r\n                zScale: 10,\r\n                xScale: 5,\r\n                yScale: 5,\r\n                zScaleUp: 5,\r\n                yScaleUp: 4,\r\n                scaleDown: 1,\r\n                pointSize: 13.5,\r\n                zIndexSoFar: 0,\r\n                rOut: 0,\r\n                rIn: 0,\r\n\r\n                index2: 1,\r\n                yIndex: 0,\r\n                casterMarks: {\r\n                    0: '',\r\n                },\r\n                coolingMarks: {\r\n                    0: '',\r\n                },\r\n                curvePointsLiquid: undefined,\r\n                liquidColors: [],\r\n                liquidPositions: [],\r\n                curvePointsSolid: undefined,\r\n                solidColors: [],\r\n                solidPositions: [],\r\n                liquidSolidPositions: {\r\n                    liquid: [],\r\n                    solid: [],\r\n                    liquidJoin: {},\r\n                    solidJoin: {}\r\n                },\r\n\r\n                solidJoin: 0,\r\n                liquidJoin: 0,\r\n\r\n                offset: 10,\r\n                textMat: undefined,\r\n                font: undefined,\r\n                fontHeight: 2,\r\n                fontSize: 18,\r\n                curveSegments: 10,\r\n                bevelThickness: 0.1,\r\n                bevelSize: 0.3,\r\n                bevelSegments: 3,\r\n                bevelEnabled: true,\r\n\r\n                line: undefined,\r\n            }\r\n        },\r\n        mounted() {\r\n            this.$nextTick(function () {\r\n                this.container = document.getElementById(\"canvas_container\")\r\n                this.width = this.container.clientWidth\r\n                this.height = this.container.clientHeight\r\n                console.log(this.container.clientWidth, this.container.clientHeight)\r\n\r\n                this.maxZLength = this.config.coordinate.z_length\r\n                this.max = this.config.coordinate.length / 2\r\n\r\n                this.zScale = this.config.coordinate.z_scale\r\n                this.xScale = this.config.coordinate.x_scale\r\n                this.yScale = this.config.coordinate.y_scale\r\n\r\n                this.xLength = this.config.coordinate.length / this.xScale\r\n                this.yLength = this.config.coordinate.width / this.yScale\r\n\r\n                this.rOut = this.config.coordinate.r / this.zScale\r\n                this.rIn = this.rOut - this.yLength\r\n\r\n                this.upLength = this.config.coordinate.center_start_distance / this.zScale\r\n                this.arcLength = (this.config.coordinate.center_end_distance - this.config.coordinate.center_start_distance) / this.zScale\r\n                this.downLength = (this.config.coordinate.z_length - this.config.coordinate.center_end_distance) / this.zScale\r\n\r\n                this.option.xAxis[0].max = this.config.coordinate.z_length\r\n\r\n                console.log(this.rOut, this.rIn)\r\n\r\n                this.init()\r\n                this.animate()\r\n\r\n                // 设备分区标记\r\n                this.casterMarks[0] = 'md'\r\n                this.coolingMarks[0] = 'md'\r\n                let index = 0\r\n                let roller = {}\r\n                for (let i = 1; i < this.config.segments.length; i++) {\r\n                    index = this.config.segments[i].start - 1\r\n                    roller = this.config.secondary_cooling_zone[index]\r\n                    this.casterMarks[roller.distance] = this.config.segments[i].seg\r\n                }\r\n\r\n                // 冷却区分区标记\r\n                for (let i = 0; i < this.config.cooling_zone.length; i++) {\r\n                    index = this.config.cooling_zone[i].start - 1\r\n                    roller = this.config.secondary_cooling_zone[index]\r\n                    this.coolingMarks[roller.distance] = '' + (i + 1)\r\n                }\r\n\r\n                this.$root.$on(\"vertical_slice1_generated\", (data) => {\r\n                    console.log(data)\r\n                    this.option.series[0].data = data.center_outer\r\n                    this.option.series[1].data = data.center_inner\r\n                    this.option.series[2].data = data.edge_outer\r\n                    this.option.series[3].data = data.edge_inner\r\n\r\n                })\r\n\r\n                this.$root.$on(\"vertical_slice2_generated\", (data) => {\r\n                    console.log(data)\r\n                    this.zIndexSoFar = data.length\r\n                    this.liquidSolidPositions.liquid = data.liquid\r\n                    this.liquidSolidPositions.solid = data.solid\r\n                    this.liquidSolidPositions.liquidJoin = data.liquid_join\r\n                    this.liquidSolidPositions.solidJoin = data.solid_join\r\n\r\n                    this.solidJoin = data.solid_join.is_join ? data.solid_join.join_index : -1\r\n                    this.liquidJoin = data.liquid_join.is_join ? data.liquid_join.join_index : -1\r\n\r\n                    this.buildShapes(data.vertical_slice)\r\n\r\n                    this.buildCurve(this.rOut, this.rIn, this.liquidSolidPositions.liquid, 400, this.curvePointsLiquid.geometry, this.liquidColors, this.liquidPositions, this.liquidJoin)\r\n                    this.buildCurve(this.rOut, this.rIn, this.liquidSolidPositions.solid, 1, this.curvePointsSolid.geometry, this.solidColors, this.solidPositions, this.solidJoin)\r\n\r\n                    this.showEdgeAtYIndex(this.yIndex)\r\n                })\r\n            })\r\n\r\n        },\r\n        methods: {\r\n            init: function () {\r\n                this.heatmap = this.createPalette()\r\n                for (let canvas of this.heatmap.canvas) {\r\n                    this.container.appendChild(canvas)\r\n                }\r\n                this.scene = new THREE.Scene()\r\n                this.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 10000)\r\n                this.camera.position.set(0, 0, 1500);\r\n                this.scene.add(new THREE.AmbientLight(0xffffff))\r\n                this.scene.background = new THREE.Color(0xffffff)\r\n\r\n                this.group = new THREE.Group()\r\n                this.group.position.set(-150, 220, 0)\r\n                this.scene.add(this.group)\r\n\r\n                this.renderer = new THREE.WebGLRenderer()\r\n                this.renderer.setPixelRatio(window.devicePixelRatio)\r\n                this.renderer.setSize(this.width, this.height)\r\n\r\n                this.buildShapesInit(this.rOut)\r\n                this.buildCurveInit()\r\n                this.loadFont()\r\n                this.container.appendChild(this.renderer.domElement)\r\n\r\n                window.addEventListener('resize', this.onWindowResize, false)\r\n            },\r\n            buildLine: function (index) {\r\n                this.group.remove(this.line)\r\n                let parameters = {color: 0x212121}\r\n                let points = []\r\n                if (index < this.upLength) {\r\n                    points.push(new THREE.Vector3(-this.rOut / this.scaleDown + this.yLength * this.yScaleUp / 2, (this.upLength - index) / this.scaleDown, 0))\r\n                    points.push(new THREE.Vector3(-this.rOut / this.scaleDown + this.yLength * this.yScaleUp + this.offset, (this.upLength - index) / this.scaleDown, 0))\r\n                } else if (index < this.upLength + this.arcLength) {\r\n                    let xy1 = this.calculateXY(0, 0, this.rOut / this.scaleDown - this.yLength * this.yScaleUp / 2, 90 * (index - this.upLength) / this.arcLength * Math.PI / 180)\r\n                    let xy2 = this.calculateXY(0, 0, this.rOut / this.scaleDown - (this.yLength * this.yScaleUp + this.offset), 90 * (index - this.upLength) / this.arcLength * Math.PI / 180)\r\n                    points.push(new THREE.Vector3(xy1.x2, xy1.y2, 0))\r\n                    points.push(new THREE.Vector3(xy2.x2, xy2.y2, 0))\r\n                } else {\r\n                    points.push(new THREE.Vector3((index - (this.upLength + this.arcLength)) / this.scaleDown, -this.rOut / this.scaleDown + this.yLength * this.yScaleUp / 2, 0))\r\n                    points.push(new THREE.Vector3((index - (this.upLength + this.arcLength)) / this.scaleDown, -this.rOut / this.scaleDown + this.yLength * this.yScaleUp + this.offset, 0))\r\n                }\r\n                this.line = this.setLine(points, parameters)\r\n                this.group.add(this.line)\r\n            },\r\n            setLine: function (points, parameters) {\r\n                const material = new THREE.LineBasicMaterial(parameters);\r\n                const geometry = new THREE.BufferGeometry().setFromPoints(points)\r\n                return new THREE.Line(geometry, material)\r\n            },\r\n            changeText: function (index) {\r\n                let liquid = this.liquidSolidPositions.liquid\r\n                let solid = this.liquidSolidPositions.solid\r\n                if (liquid.length === 0 || solid.length === 0) {\r\n                    return\r\n                }\r\n                this.group.remove(this.text)\r\n                console.log(liquid, solid)\r\n                let liquidValue = liquid[index] * 5\r\n                let solidValue = solid[index] * 5\r\n                let text = \"L : \" + liquidValue + \" (mm) , S : \" + solidValue + \" (mm)\"\r\n                if (index < this.upLength) {\r\n                    this.text = this.createText(text, -this.rOut / this.scaleDown + this.yLength * this.yScaleUp + this.offset, (this.upLength - index) / this.scaleDown, 0, 0)\r\n                } else if (index < this.upLength + this.arcLength) {\r\n                    let xy = this.calculateXY(0, 0, this.rOut / this.scaleDown - (this.yLength * this.yScaleUp + this.offset), 90 * (index - this.upLength) / this.arcLength * Math.PI / 180)\r\n                    this.text = this.createText(text, xy.x2, xy.y2, 0, 90 * (index - this.upLength) / this.arcLength * Math.PI / 180)\r\n                } else {\r\n                    this.text = this.createText(text, (index - (this.upLength + this.arcLength)) / this.scaleDown, -this.rOut / this.scaleDown + this.yLength * this.yScaleUp + this.offset, 0, 90 * Math.PI / 180)\r\n                }\r\n                this.group.add(this.text)\r\n                this.buildLine(index)\r\n            },\r\n            loadFont: function () {\r\n                this.textMat = new THREE.MeshLambertMaterial({color: 0x212121})\r\n                let loader = new FontLoader()\r\n                this.font = loader.parse(fontJson)\r\n                this.text = this.createText(\"L : 0 (mm) , S : 0 (mm)\", -this.rOut / this.scaleDown + this.yLength * this.yScaleUp + this.offset, this.upLength / this.scaleDown, 0, 0)\r\n                this.group.add(this.text)\r\n                this.buildLine(0)\r\n            },\r\n            createText: function (txt, x, y, z, angle) {\r\n                let textGeo = new TextGeometry(txt, {\r\n                    font: this.font,\r\n                    size: this.fontSize,\r\n                    height: this.fontHeight,\r\n                    curveSegments: this.curveSegments,\r\n                    weight: \"normal\",\r\n                    bevelThickness: this.bevelThickness,\r\n                    bevelSize: this.bevelSize,\r\n                    bevelSegments: this.bevelSegments,\r\n                    bevelEnabled: this.bevelEnabled\r\n                });\r\n                textGeo.computeBoundingBox();\r\n                textGeo.computeVertexNormals();\r\n                let text = new THREE.Mesh(textGeo, this.textMat)\r\n                text.position.set(x, y, z)\r\n                text.rotateZ(angle)\r\n                text.castShadow = true;\r\n                return text\r\n            },\r\n            buildShapesInit: function (rOut) {\r\n                let colors = []\r\n                let positions = []\r\n                // up\r\n                for (let i = 0; i < this.upLength / this.zScaleUp; i++) {\r\n                    let left = 0, right = this.yLength - 1\r\n                    while (left < right) {\r\n                        // positions\r\n                        const x1 = -this.rOut / this.scaleDown + left * this.yScaleUp\r\n                        const y1 = (this.upLength - 1 - i * this.zScaleUp) / this.scaleDown\r\n                        positions.push(x1, y1, 0)\r\n                        // colors\r\n                        const arr1 = this.heatmap.pickColor(1)\r\n                        const vx1 = arr1[0] / 255\r\n                        const vy1 = arr1[1] / 255\r\n                        const vz1 = arr1[2] / 255\r\n                        colors.push(vx1, vy1, vz1)\r\n\r\n                        // positions\r\n                        const x2 = -this.rOut / this.scaleDown + right * this.yScaleUp\r\n                        const y2 = (this.upLength - 1 - i * this.zScaleUp) / this.scaleDown\r\n                        positions.push(x2, y2, 0)\r\n                        // colors\r\n                        const arr2 = this.heatmap.pickColor(1)\r\n                        const vx2 = arr2[0] / 255\r\n                        const vy2 = arr2[1] / 255\r\n                        const vz2 = arr2[2] / 255\r\n                        colors.push(vx2, vy2, vz2)\r\n\r\n                        left++\r\n                        right--\r\n                    }\r\n                }\r\n                // arc\r\n                for (let i = 0; i < this.arcLength / this.zScaleUp; i++) {\r\n                    let left = 0, right = this.yLength - 1\r\n                    while (left < right) {\r\n                        // positions\r\n                        let xy1 = this.calculateXY(0, 0, rOut / this.scaleDown - left * this.yScaleUp, 90 * i * this.zScaleUp / this.arcLength * Math.PI / 180)\r\n                        const x1 = xy1.x2\r\n                        const y1 = xy1.y2\r\n                        positions.push(x1, y1, 0)\r\n                        // colors\r\n                        const arr1 = this.heatmap.pickColor(1)\r\n                        const vx1 = arr1[0] / 255\r\n                        const vy1 = arr1[1] / 255\r\n                        const vz1 = arr1[2] / 255\r\n                        colors.push(vx1, vy1, vz1)\r\n\r\n                        // positions\r\n                        let xy2 = this.calculateXY(0, 0, rOut / this.scaleDown - right * this.yScaleUp, 90 * i * this.zScaleUp / this.arcLength * Math.PI / 180)\r\n                        const x2 = xy2.x2\r\n                        const y2 = xy2.y2\r\n                        positions.push(x2, y2, 0)\r\n                        // colors\r\n                        const arr2 = this.heatmap.pickColor(1)\r\n                        const vx2 = arr2[0] / 255\r\n                        const vy2 = arr2[1] / 255\r\n                        const vz2 = arr2[2] / 255\r\n                        colors.push(vx2, vy2, vz2)\r\n\r\n                        left++\r\n                        right--\r\n                    }\r\n                }\r\n                // down\r\n                for (let i = 0; i < this.downLength / this.zScaleUp; i++) {\r\n                    let left = 0, right = this.yLength - 1\r\n                    while (left < right) {\r\n                        // positions\r\n                        positions.push(i * this.zScaleUp / this.scaleDown, (-this.rOut / this.scaleDown + left * this.yScaleUp), 0)\r\n                        // colors\r\n                        const arr1 = this.heatmap.pickColor(1)\r\n                        const vx1 = arr1[0] / 255\r\n                        const vy1 = arr1[1] / 255\r\n                        const vz1 = arr1[2] / 255\r\n                        colors.push(vx1, vy1, vz1)\r\n\r\n                        // positions\r\n                        positions.push(i * this.zScaleUp / this.scaleDown, (-this.rOut / this.scaleDown + right * this.yScaleUp), 0)\r\n                        // colors\r\n                        const arr2 = this.heatmap.pickColor(1)\r\n                        const vx2 = arr2[0] / 255\r\n                        const vy2 = arr2[1] / 255\r\n                        const vz2 = arr2[2] / 255\r\n                        colors.push(vx2, vy2, vz2)\r\n\r\n                        left++\r\n                        right--\r\n                    }\r\n                }\r\n                this.colors = colors\r\n                this.positions = positions\r\n                const geometry = new THREE.BufferGeometry();\r\n                geometry.setAttribute('position', new THREE.Float32BufferAttribute(this.positions, 3));\r\n                geometry.setAttribute('color', new THREE.Float32BufferAttribute(this.colors, 3));\r\n                geometry.computeBoundingSphere();\r\n                const material = new THREE.PointsMaterial({size: this.pointSize, vertexColors: true});\r\n                this.points = new THREE.Points(geometry, material);\r\n                this.group.add(this.points)\r\n            },\r\n            buildShapes: function (data) {\r\n                let colors = []\r\n                let n = data.length\r\n                let m = data[0].length\r\n                let start = 0\r\n                let end = Math.min(this.upLength / this.zScaleUp, n)\r\n                // up\r\n                for (let i = start; i < end; i++) {\r\n                    let left = 0, right = m - 1\r\n                    while (left < right) {\r\n                        // colors\r\n                        const arr1 = this.heatmap.pickColor(Math.floor(data[i][left]) % this.originTemperature)\r\n                        const vx1 = arr1[0] / 255\r\n                        const vy1 = arr1[1] / 255\r\n                        const vz1 = arr1[2] / 255\r\n                        colors.push(vx1, vy1, vz1)\r\n\r\n                        // colors\r\n                        const arr2 = this.heatmap.pickColor(Math.floor(data[i][right]) % this.originTemperature)\r\n                        const vx2 = arr2[0] / 255\r\n                        const vy2 = arr2[1] / 255\r\n                        const vz2 = arr2[2] / 255\r\n                        colors.push(vx2, vy2, vz2)\r\n\r\n                        left++\r\n                        right--\r\n                    }\r\n                }\r\n                // arc\r\n                if (n * this.zScaleUp > this.upLength) {\r\n                    start = Math.floor(this.upLength / this.zScaleUp)\r\n                    end = Math.min((this.upLength + this.arcLength) / this.zScaleUp, n)\r\n                    for (let i = start; i < end; i++) {\r\n                        let left = 0, right = m - 1\r\n                        while (left < right) {\r\n                            // colors\r\n                            const arr1 = this.heatmap.pickColor(Math.floor(data[i][left]) % this.originTemperature)\r\n                            const vx1 = arr1[0] / 255\r\n                            const vy1 = arr1[1] / 255\r\n                            const vz1 = arr1[2] / 255\r\n                            colors.push(vx1, vy1, vz1)\r\n\r\n                            // colors\r\n                            const arr2 = this.heatmap.pickColor(Math.floor(data[i][right]) % this.originTemperature)\r\n                            const vx2 = arr2[0] / 255\r\n                            const vy2 = arr2[1] / 255\r\n                            const vz2 = arr2[2] / 255\r\n                            colors.push(vx2, vy2, vz2)\r\n\r\n                            left++\r\n                            right--\r\n                        }\r\n                    }\r\n                }\r\n                // down\r\n                if (n * this.zScaleUp > this.upLength + this.arcLength) {\r\n                    start = Math.floor((this.upLength + this.arcLength) / this.zScaleUp)\r\n                    end = n\r\n                    for (let i = start; i < end; i++) {\r\n                        let left = 0, right = m - 1\r\n                        while (left < right) {\r\n                            // colors\r\n                            const arr1 = this.heatmap.pickColor(Math.floor(data[i][left]) % this.originTemperature)\r\n                            const vx1 = arr1[0] / 255\r\n                            const vy1 = arr1[1] / 255\r\n                            const vz1 = arr1[2] / 255\r\n                            colors.push(vx1, vy1, vz1)\r\n\r\n                            // colors\r\n                            const arr2 = this.heatmap.pickColor(Math.floor(data[i][right]) % this.originTemperature)\r\n                            const vx2 = arr2[0] / 255\r\n                            const vy2 = arr2[1] / 255\r\n                            const vz2 = arr2[2] / 255\r\n                            colors.push(vx2, vy2, vz2)\r\n\r\n                            left++\r\n                            right--\r\n                        }\r\n                    }\r\n                }\r\n                this.colors = colors\r\n                this.points.geometry.setAttribute('color', new THREE.Float32BufferAttribute(this.colors, 3));\r\n            },\r\n            buildCurveInit: function () {\r\n                let colors = []\r\n                let positions = []\r\n                const geometry1 = new THREE.BufferGeometry();\r\n                geometry1.setAttribute('position', new THREE.Float32BufferAttribute(colors, 3));\r\n                geometry1.setAttribute('color', new THREE.Float32BufferAttribute(positions, 3));\r\n                geometry1.computeBoundingSphere();\r\n                const material = new THREE.PointsMaterial({size: this.pointSize / 1.2, vertexColors: true});\r\n                this.curvePointsLiquid = new THREE.Points(geometry1, material);\r\n                this.group.add(this.curvePointsLiquid)\r\n\r\n                const geometry2 = new THREE.BufferGeometry();\r\n                geometry1.setAttribute('position', new THREE.Float32BufferAttribute(colors, 3));\r\n                geometry1.setAttribute('color', new THREE.Float32BufferAttribute(positions, 3));\r\n                geometry1.computeBoundingSphere();\r\n\r\n                this.curvePointsSolid = new THREE.Points(geometry2, material);\r\n                this.group.add(this.curvePointsSolid)\r\n            },\r\n            buildCurve: function (rOut, rIn, data, colorIndex, geometry, colors1, positions1, index) {\r\n                let positions = []\r\n                let colors = []\r\n                let joined = false\r\n                // up\r\n                let start = 0\r\n                let end = Math.floor(Math.min(this.upLength, data.length))\r\n                for (let i = start; i < end / this.zScaleUp; i++) {\r\n                    if (data[i * this.zScaleUp] === 0) {\r\n                        console.log(data[i * this.zScaleUp], \"hi there\")\r\n                        continue\r\n                    }\r\n                    // positions\r\n                    const x1 = -this.rOut / this.scaleDown + data[i * this.zScaleUp] * this.yScaleUp - this.pointSize / (2 * this.yScaleUp)\r\n                    const x2 = -this.rOut / this.scaleDown + this.yLength * this.yScaleUp - data[i * this.zScaleUp] * this.yScaleUp - this.pointSize / (2 * this.yScaleUp)\r\n                    const y = (this.upLength - 1 - i * this.zScaleUp) / this.scaleDown\r\n                    positions.push(x1, y, 0)\r\n                    positions.push(x2, y, 0)\r\n                    // colors\r\n                    const arr = this.heatmap.pickColor(colorIndex)\r\n\r\n                    const vx = arr[0] / 255\r\n                    const vy = arr[1] / 255\r\n                    const vz = arr[2] / 255\r\n\r\n                    colors.push(vx, vy, vz)\r\n                    colors.push(vx, vy, vz)\r\n\r\n                    if (index !== -1 && i * this.zScaleUp > index) {\r\n                        joined = true\r\n                        break\r\n                    }\r\n                }\r\n                // arc\r\n                if (data.length > this.upLength) {\r\n                    let zStart = 0\r\n                    let start = Math.floor(this.upLength)\r\n                    let end = Math.floor(Math.min(this.upLength + this.arcLength, data.length))\r\n                    for (let i = start / this.zScaleUp; i < end / this.zScaleUp; i++) {\r\n                        if (data[i * this.zScaleUp] === 0) {\r\n                            continue\r\n                        }\r\n                        // positions\r\n                        let xy = this.calculateXY(0, 0, rOut / this.scaleDown - data[i * this.zScaleUp] * this.yScaleUp, 90 * zStart * this.zScaleUp / this.arcLength * Math.PI / 180)\r\n                        positions.push(xy.x2, xy.y2, 0)\r\n                        let xy2 = this.calculateXY(0, 0, rOut / this.scaleDown - this.yLength * this.yScaleUp + data[i * this.zScaleUp] * this.yScaleUp, 90 * zStart * this.zScaleUp / this.arcLength * Math.PI / 180)\r\n                        positions.push(xy2.x2, xy2.y2, 0)\r\n                        // colors\r\n                        const arr = this.heatmap.pickColor(colorIndex)\r\n                        const vx = arr[0] / 255\r\n                        const vy = arr[1] / 255\r\n                        const vz = arr[2] / 255\r\n\r\n                        colors.push(vx, vy, vz)\r\n                        colors.push(vx, vy, vz)\r\n                        zStart++\r\n                        if (index !== -1 && (i * this.zScaleUp > index || joined)) {\r\n                            console.log(\"join\", \"??????\")\r\n                            joined = true\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                // down\r\n                if (data.length > this.upLength + this.arcLength) {\r\n                    let xStart = 0\r\n                    start = Math.floor(this.upLength + this.arcLength)\r\n                    end = data.length\r\n                    for (let i = start / this.zScaleUp; i < end / this.zScaleUp; i++) {\r\n                        if (data[i * this.zScaleUp] === 0) {\r\n                            continue\r\n                        }\r\n                        // positions\r\n                        positions.push(xStart * this.zScaleUp / this.scaleDown, -this.rOut / this.scaleDown + data[i * this.zScaleUp] * this.yScaleUp, 0)\r\n                        positions.push(xStart * this.zScaleUp / this.scaleDown, -this.rOut / this.scaleDown + this.yLength * this.yScaleUp - data[i * this.zScaleUp] * this.yScaleUp, 0)\r\n                        // colors\r\n                        const arr = this.heatmap.pickColor(colorIndex)\r\n\r\n                        const vx = arr[0] / 255\r\n                        const vy = arr[1] / 255\r\n                        const vz = arr[2] / 255\r\n\r\n                        colors.push(vx, vy, vz)\r\n                        colors.push(vx, vy, vz)\r\n                        xStart++\r\n                        if (index !== -1 && (i * this.zScaleUp > index || joined)) {\r\n                            joined = true\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                colors1 = colors\r\n                positions1 = positions\r\n                geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions1, 3));\r\n                geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors1, 3));\r\n            },\r\n            calculateXY: function (x1, y1, r, angle) {\r\n                return {\r\n                    x2: x1 - r * Math.cos(angle),\r\n                    y2: y1 - r * Math.sin(angle)\r\n                }\r\n            },\r\n            onWindowResize: function () {\r\n                this.camera.aspect = this.width / this.height\r\n                this.camera.updateProjectionMatrix()\r\n\r\n                this.renderer.setSize(this.width, this.height)\r\n            },\r\n            animate: function () {\r\n                requestAnimationFrame(this.animate)\r\n                this.render()\r\n            },\r\n            render: function () {\r\n                this.renderer.render(this.scene, this.camera)\r\n            },\r\n            showVerticalSlice1AtIndex: function () {\r\n                let message = {\r\n                    type: \"generate_vertical_slice1\",\r\n                    content: \"\"\r\n                }\r\n                if (this.conn !== undefined) {\r\n                    this.conn.send(JSON.stringify(message));\r\n                }\r\n            },\r\n            showVerticalSlice2AtIndex: function (index) {\r\n                console.log(index)\r\n                let msg = {\r\n                    \"index\": Math.floor(index / 5),\r\n                    \"z_scale\": this.zScaleUp,\r\n                }\r\n                let message = {\r\n                    type: \"generate_vertical_slice2\",\r\n                    content: JSON.stringify(msg)\r\n                }\r\n                if (this.conn !== undefined) {\r\n                    this.conn.send(JSON.stringify(message));\r\n                }\r\n            },\r\n            showEdgeAtYIndex: function (index) {\r\n                if (index >= this.zIndexSoFar * this.zScale) {\r\n                    index = this.zIndexSoFar * this.zScale\r\n                    this.yIndex = this.zIndexSoFar * this.zScale\r\n                }\r\n                index--\r\n                index = Math.floor(index / this.zScale)\r\n                this.changeText(index)\r\n            },\r\n            createPalette: function () {\r\n                //颜色条的颜色分布\r\n                let data1 = this.createPaletteHelper({\r\n                    1.0: \"#388E3C\",\r\n                    0.5: \"#536DFE\",\r\n                    0.0: \"#212121\",\r\n                }, [\r\n                    {char: \"800\", x: 70, y: 790},\r\n                    {char: \"600\", x: 70, y: 600},\r\n                    {char: \"400\", x: 70, y: 400},\r\n                    {char: \"200\", x: 70, y: 200},\r\n                    {char: \"0\", x: 70, y: 0},\r\n                ], \"0\", \"0\")\r\n\r\n                let data2 = this.createPaletteHelper({\r\n                    1.0: \"#D32F2F\",\r\n                    0.5: \"#FFC107\",\r\n                    0.0: \"#388E3C\",\r\n                }, [\r\n                    {char: \"1600\", x: 5, y: 790},\r\n                    {char: \"1400\", x: 5, y: 600},\r\n                    {char: \"1200\", x: 5, y: 400},\r\n                    {char: \"1000\", x: 5, y: 200},\r\n                    {char: \"800\", x: 5, y: 0},\r\n                ], \"\", \"0\", \"0\")\r\n\r\n                return {\r\n                    canvas: [data1.canvas, data2.canvas],\r\n                    pickColor: function (position) {\r\n                        if (position > 800) {\r\n                            position = 10 + position - 800\r\n                            return data2.colorData.slice(position * 400, position * 400 + 3)\r\n                        } else {\r\n                            return data1.colorData.slice(position * 400, position * 400 + 3)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            createPaletteHelper: function (colorStops, texts, left, top, right) {\r\n                //颜色条的大小\r\n                let width = 100, height = 820\r\n\r\n                // 创建canvas\r\n                let paletteCanvas = document.createElement(\"canvas\")\r\n                paletteCanvas.width = width\r\n                paletteCanvas.height = height\r\n                paletteCanvas.style.position = 'absolute'\r\n                paletteCanvas.style.top = top\r\n                paletteCanvas.style.left = left\r\n                paletteCanvas.style.right = right\r\n                let ctx = paletteCanvas.getContext(\"2d\")\r\n\r\n                // 创建线性渐变色\r\n                let linearGradient = ctx.createLinearGradient(0, 0, 0, height)\r\n                for (let key in colorStops) {\r\n                    linearGradient.addColorStop(parseFloat(key), colorStops[key])\r\n                }\r\n\r\n                // 绘制渐变色条\r\n                ctx.fillStyle = linearGradient\r\n                ctx.fillRect(0, 0, width, height)\r\n\r\n                ctx.font = '16px \"微软雅黑\"'\r\n                ctx.fillStyle = \"white\"\r\n                ctx.textBaseline = \"top\"\r\n                for (let text of texts) {\r\n                    ctx.fillText(text.char, text.x, text.y)\r\n                }\r\n\r\n                return {colorData: ctx.getImageData(0, 0, width, height).data, canvas: paletteCanvas}\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #curves_container {\r\n        width: 100%;\r\n        height: calc(100vh - 30px);\r\n        min-height: calc(100vh - 30px);\r\n        max-height: calc(100vh - 30px);\r\n        border: 1px solid #ddd;\r\n        position: relative;\r\n    }\r\n\r\n    .el-tabs {\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .el-tabs--top {\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .el-tabs--border-card {\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .chart {\r\n        height: calc(80vh - 10px);\r\n        width: calc(100vw - 120px);\r\n    }\r\n\r\n    .bottom {\r\n        box-sizing: border-box;\r\n        text-align: center;\r\n        width: 100%;\r\n        z-index: 999;\r\n        bottom: 0;\r\n        background: white;\r\n    }\r\n\r\n    .block {\r\n        display: inline-block;\r\n    }\r\n\r\n    #canvas_container {\r\n        border: 1px solid #ddd;\r\n        position: relative;\r\n    }\r\n\r\n    .slice_bottom {\r\n        position: absolute;\r\n        display: inline-block;\r\n        left: 50%;\r\n        top: 80px;\r\n        transform: translateX(-50%);\r\n        text-align: center;\r\n    }\r\n\r\n    .distance_bottom {\r\n        box-sizing: border-box;\r\n        text-align: left;\r\n        width: 100%;\r\n        z-index: 999;\r\n        background: white;\r\n    }\r\n\r\n    .distance_bottom .block {\r\n        box-sizing: border-box;\r\n        width: 100%;\r\n    }\r\n\r\n    .info {\r\n        font-size: larger;\r\n        font-weight: bolder;\r\n        display: inline-block;\r\n        position: absolute;\r\n        z-index: 999;\r\n        top: 30px;\r\n        right: 200px;\r\n    }\r\n\r\n    .block {\r\n        background-color: #F0F4C3;\r\n        padding: 0 20px 10px;\r\n        border-top: 1px solid #ddd;\r\n    }\r\n\r\n    .block2 {\r\n        border-bottom: 1px solid #ddd;\r\n    }\r\n\r\n    .slider-demo-block {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .slider-demo-block .el-slider {\r\n        margin-top: 0;\r\n        margin-left: 12px;\r\n    }\r\n\r\n    .slider-demo-block .demonstration {\r\n        font-size: 14px;\r\n        line-height: 44px;\r\n        flex: 1;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    .slider-demo-block .demonstration + .el-slider {\r\n        flex: 0 0 90%;\r\n    }\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VerticalSlice.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VerticalSlice.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VerticalSlice.vue?vue&type=template&id=27638b54&scoped=true&\"\nimport script from \"./VerticalSlice.vue?vue&type=script&lang=js&\"\nexport * from \"./VerticalSlice.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VerticalSlice.vue?vue&type=style&index=0&id=27638b54&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"27638b54\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div id=\"app\">\n        <el-container>\n            <el-header style=\"padding: 0; z-index: 100; text-align: left\">\n                <div class=\"header_p\">计算温度场</div>\n                <el-button @click=\"formVisible = true\" type=\"success\" circle>\n                    <i class=\"el-icon-plus\"></i>\n                </el-button>\n            </el-header>\n            <el-container>\n                <el-main>\n                    <ThreeDField></ThreeDField>\n                </el-main>\n            </el-container>\n        </el-container>\n\n        <el-dialog :visible.sync=\"formVisible\" center top=\"5vh\">\n            <el-button type=\"danger\" @click=\"closeFormDialog\" size=\"normal\">关闭</el-button>\n            <Form></Form>\n        </el-dialog>\n\n        <el-dialog :destroy-on-close=\"true\" :visible.sync=\"sliceDialogVisible\" width=\"100%\" center top=\"0vh\"\n                   :fullscreen=true>\n            <div class=\"dialog_title\">\n                <span>温度场横切片分布详情</span>\n                <br>\n                <br>\n                <el-button @click=\"closeSliceDialog\" type=\"danger\">关闭页面</el-button>\n            </div>\n            <SliceShow :conn=\"conn\" :config=\"casterCfg\"></SliceShow>\n        </el-dialog>\n\n        <el-dialog :destroy-on-close=\"true\" :visible.sync=\"curvesDialogVisible\" width=\"100%\" center top=\"0vh\"\n                   :fullscreen=true>\n            <div class=\"dialog_title\">\n                <el-button @click=\"closeCurvesDialog\" type=\"danger\">关闭页面</el-button>\n            </div>\n            <Curves :conn=\"conn\" :config=\"casterCfg\"></Curves>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    import Form from './components/Form'\n    import ThreeDField from \"./components/ThreeDField\";\n    import SliceShow from \"./components/Slice\";\n    import Curves from \"./components/VerticalSlice\";\n\n    export default {\n        components: {\n            Curves,\n            ThreeDField,\n            Form,\n            SliceShow,\n        },\n        name: 'App',\n        data() {\n            return {\n                formVisible: true,\n\n                sliceDialogVisible: false,\n                curvesDialogVisible: false,\n\n                conn: undefined,\n                casterCfg: {}\n            }\n        },\n        methods: {\n            closeFormDialog: function () {\n                this.formVisible = false\n            },\n            closeSliceDialog: function () {\n                this.$confirm(\"确认关闭？\").then(() => {\n                    // if (this.conn !== undefined) {\n                    //     this.stopSliceDetail()\n                    // }\n                    this.sliceDialogVisible = false\n                }).catch(() => {\n                })\n            },\n            closeCurvesDialog: function () {\n                this.$confirm(\"确认关闭？\").then(() => {\n                    if (this.conn !== undefined) {\n                        // todo\n                    }\n                    this.curvesDialogVisible = false\n                }).catch(() => {\n                })\n            },\n            stopSliceDetail: function () {\n                let message = {\n                    type: \"stop_push_slice_detail\",\n                    content: \"stop_push_slice_detail\",\n                }\n                if (this.conn !== undefined) {\n                    this.conn.send(JSON.stringify(message));\n                    console.log(\"stop_push_slice_detail\")\n                }\n            }\n        },\n        mounted() {\n            this.$root.$on(\"show_detail_slice\", (args) => {\n                this.sliceDialogVisible = args.show\n                this.conn = args.conn\n                this.casterCfg = args.config\n\n                this.$root.$emit(\"open_dialog\")\n            })\n\n            this.$root.$on(\"show_detail_curves\", (args) => {\n                this.curvesDialogVisible = args.show\n                this.conn = args.conn\n                this.casterCfg = args.config\n            })\n        }\n    }\n</script>\n\n<style>\n    #app {\n        font-family: Avenir, Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n        width: 100vw;\n        height: 100vh;\n        box-sizing: border-box;\n    }\n\n    /* css reset */\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed,\n    figure, figcaption, footer, header, hgroup,\n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        vertical-align: baseline;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure,\n    footer, header, hgroup, menu, nav, section {\n        display: block;\n    }\n\n    body {\n        line-height: 1;\n    }\n\n    ol, ul {\n        list-style: none;\n    }\n\n    blockquote, q {\n        quotes: none;\n    }\n\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n    }\n\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n\n    .el-container {\n        height: 100%;\n    }\n\n    .el-header {\n        box-sizing: border-box;\n        border: 1px solid #ddd;\n        box-shadow: rgba(0, 0, 0, 0.35) 0 5px 15px;\n        font-family: \"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"微软雅黑\", Arial, sans-serif;\n        font-size: large;\n    }\n\n    .el-aside {\n        height: 100%;\n        max-height: 100%;\n        border-right: 1px solid #ddd;\n        box-sizing: border-box;\n        max-width: 30%;\n        overflow-x: hidden;\n        position: relative;\n    }\n\n    .header_p {\n        font-size: larger;\n        padding-left: 20px;\n        line-height: 60px;\n        text-align: left;\n        font-weight: bolder;\n        letter-spacing: 8px;\n        display: inline-block;\n    }\n\n    .el-dialog__header {\n        display: none;\n    }\n\n    .el-dialog__body {\n        position: relative;\n    }\n\n    .dialog_title {\n        text-align: center;\n        display: block;\n        position: absolute;\n        color: #212121;\n        font-size: large;\n        top: 30px;\n        left: 50%;\n        transform: translateX(-50%);\n        z-index: 999;\n        font-weight: bolder;\n\n    }\n\n    .dialog_close {\n        display: block;\n        height: 100px;\n        width: 100px;\n        text-align: center;\n        line-height: 100px;\n        font-size: 50px;\n        color: #212121;\n        position: absolute;\n        z-index: 999;\n        top: 30px;\n        left: 50%;\n        transform: translateX(-50%);\n        cursor: pointer;\n    }\n\n    .el-dialog--center .el-dialog__body {\n        padding: 10px 25px;\n    }\n\n    .dialog_close:hover {\n        color: #919191;\n    }\n</style>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=471bac7e&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport App from './App.vue'\n\nVue.use(ElementUI)\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VerticalSlice.vue?vue&type=style&index=0&id=27638b54&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&id=21bb4d9e&scoped=true&lang=css&\""],"sourceRoot":""}